

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Nov 05 11:40:08 2024

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4620 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  001B4C                     __pidataCOMRAM:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _LCD_INIT_STRING
    78  001B4C  28                 	db	40
    79  001B4D  0C                 	db	12
    80  001B4E  01                 	db	1
    81  001B4F  06                 	db	6
    82                           
    83                           	psect	smallconst
    84  001000                     __psmallconst:
    85                           	opt stack 0
    86  001000  00                 	db	0
    87  001001                     _dpowers:
    88                           	opt stack 0
    89  001001  0001               	dw	1
    90  001003  000A               	dw	10
    91  001005  0064               	dw	100
    92  001007  03E8               	dw	1000
    93  001009  2710               	dw	10000
    94  00100B                     __end_of_dpowers:
    95                           	opt stack 0
    96  0000                     _TRISC	set	3988
    97  0000                     _TRISE	set	3990
    98  0000                     _TRISD	set	3989
    99  0000                     _TRISB	set	3987
   100  0000                     _TRISA	set	3986
   101  0000                     _LATE	set	3981
   102  0000                     _LATD	set	3980
   103  0000                     _LATC	set	3979
   104  0000                     _LATB	set	3978
   105  0000                     _LATA	set	3977
   106  0000                     _ADCON1	set	4033
   107  0000                     _PORTDbits	set	3971
   108  0000                     _PORTAbits	set	3968
   109  0000                     _PORTBbits	set	3969
   110  0000                     _INTCON	set	4082
   111  0000                     _TXREG	set	4013
   112  0000                     _PIR1bits	set	3998
   113  0000                     _RCREG	set	4014
   114  0000                     _RCSTAbits	set	4011
   115  0000                     _RCSTA	set	4011
   116  0000                     _TXSTAbits	set	4012
   117  0000                     _SPBRGH	set	4016
   118  0000                     _SPBRG	set	4015
   119  0000                     _TXSTA	set	4012
   120  0000                     _BAUDCONbits	set	4024
   121  0000                     _ADRESL	set	4035
   122  0000                     _ADRESH	set	4036
   123  0000                     _ADCON2	set	4032
   124  0000                     _ADCON0bits	set	4034
   125  0000                     _ADCON0	set	4034
   126  00100B                     STR_2:
   127  00100B  20                 	db	32
   128  00100C  41                 	db	65	;'A'
   129  00100D  6E                 	db	110	;'n'
   130  00100E  77                 	db	119	;'w'
   131  00100F  61                 	db	97	;'a'
   132  001010  72                 	db	114	;'r'
   133  001011  20                 	db	32
   134  001012  26                 	db	38
   135  001013  20                 	db	32
   136  001014  41                 	db	65	;'A'
   137  001015  62                 	db	98	;'b'
   138  001016  6F                 	db	111	;'o'
   139  001017  6F                 	db	111	;'o'
   140  001018  64                 	db	100	;'d'
   141  001019  0D                 	db	13
   142  00101A  0A                 	db	10
   143  00101B  00                 	db	0
   144  00101C                     STR_5:
   145  00101C  43                 	db	67	;'C'
   146  00101D  6F                 	db	111	;'o'
   147  00101E  75                 	db	117	;'u'
   148  00101F  6E                 	db	110	;'n'
   149  001020  74                 	db	116	;'t'
   150  001021  65                 	db	101	;'e'
   151  001022  72                 	db	114	;'r'
   152  001023  20                 	db	32
   153  001024  3A                 	db	58	;':'
   154  001025  20                 	db	32
   155  001026  25                 	db	37
   156  001027  64                 	db	100	;'d'
   157  001028  20                 	db	32
   158  001029  20                 	db	32
   159  00102A  20                 	db	32
   160  00102B  00                 	db	0
   161  00102C                     STR_4:
   162  00102C  54                 	db	84	;'T'
   163  00102D  65                 	db	101	;'e'
   164  00102E  6D                 	db	109	;'m'
   165  00102F  70                 	db	112	;'p'
   166  001030  20                 	db	32
   167  001031  41                 	db	65	;'A'
   168  001032  6C                 	db	108	;'l'
   169  001033  65                 	db	101	;'e'
   170  001034  72                 	db	114	;'r'
   171  001035  74                 	db	116	;'t'
   172  001036  21                 	db	33
   173  001037  20                 	db	32
   174  001038  20                 	db	32
   175  001039  20                 	db	32
   176  00103A  00                 	db	0
   177  00103B                     STR_1:
   178  00103B  20                 	db	32
   179  00103C  41                 	db	65	;'A'
   180  00103D  6E                 	db	110	;'n'
   181  00103E  77                 	db	119	;'w'
   182  00103F  61                 	db	97	;'a'
   183  001040  72                 	db	114	;'r'
   184  001041  20                 	db	32
   185  001042  26                 	db	38
   186  001043  20                 	db	32
   187  001044  41                 	db	65	;'A'
   188  001045  62                 	db	98	;'b'
   189  001046  6F                 	db	111	;'o'
   190  001047  6F                 	db	111	;'o'
   191  001048  64                 	db	100	;'d'
   192  001049  00                 	db	0
   193  00104A                     STR_7:
   194  00104A  0A                 	db	10
   195  00104B  20                 	db	32
   196  00104C  62                 	db	98	;'b'
   197  00104D  75                 	db	117	;'u'
   198  00104E  7A                 	db	122	;'z'
   199  00104F  7A                 	db	122	;'z'
   200  001050  65                 	db	101	;'e'
   201  001051  72                 	db	114	;'r'
   202  001052  20                 	db	32
   203  001053  6F                 	db	111	;'o'
   204  001054  6E                 	db	110	;'n'
   205  001055  00                 	db	0
   206  001056                     STR_6:
   207  001056  25                 	db	37
   208  001057  63                 	db	99	;'c'
   209  001058  00                 	db	0
   210  0000                     
   211                           ; #config settings
   212  001059  00                 	db	0	; dummy byte at the end
   213  0000                     
   214                           	psect	cinit
   215  001A4E                     __pcinit:
   216                           	opt stack 0
   217  001A4E                     start_initialization:
   218                           	opt stack 0
   219  001A4E                     __initialization:
   220                           	opt stack 0
   221                           
   222                           ; Initialize objects allocated to COMRAM (4 bytes)
   223                           ; load TBLPTR registers with __pidataCOMRAM
   224  001A4E  0E4C               	movlw	low __pidataCOMRAM
   225  001A50  6EF6               	movwf	tblptrl,c
   226  001A52  0E1B               	movlw	high __pidataCOMRAM
   227  001A54  6EF7               	movwf	tblptrh,c
   228  001A56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   229  001A58  6EF8               	movwf	tblptru,c
   230  001A5A  EE00  F07A         	lfsr	0,__pdataCOMRAM
   231  001A5E  EE10 F004          	lfsr	1,4
   232  001A62                     copy_data0:
   233  001A62  0009               	tblrd		*+
   234  001A64  CFF5 FFEE          	movff	tablat,postinc0
   235  001A68  50E5               	movf	postdec1,w,c
   236  001A6A  50E1               	movf	fsr1l,w,c
   237  001A6C  E1FA               	bnz	copy_data0
   238  001A6E                     end_of_initialization:
   239                           	opt stack 0
   240  001A6E                     __end_of__initialization:
   241                           	opt stack 0
   242  001A6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   243  001A70  6EF8               	movwf	tblptru,c
   244  001A72  0100               	movlb	0
   245  001A74  EF2D  F008         	goto	_main	;jump to C main() function
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           postinc0	equ	0xFEE
   251                           postdec1	equ	0xFE5
   252                           fsr1l	equ	0xFE1
   253                           
   254                           	psect	dataCOMRAM
   255  00007A                     __pdataCOMRAM:
   256                           	opt stack 0
   257  00007A                     _LCD_INIT_STRING:
   258                           	opt stack 0
   259  00007A                     	ds	4
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           postdec1	equ	0xFE5
   266                           fsr1l	equ	0xFE1
   267                           
   268                           	psect	cstackCOMRAM
   269  000001                     __pcstackCOMRAM:
   270                           	opt stack 0
   271  000001                     ??_delay_cycles:
   272  000001                     ?_read_adc_raw_no_lib:
   273                           	opt stack 0
   274  000001                     ?___lwdiv:
   275                           	opt stack 0
   276  000001                     ?___ftpack:
   277                           	opt stack 0
   278  000001                     setupSerial@dummy:
   279                           	opt stack 0
   280  000001                     read_byte_no_lib@c:
   281                           	opt stack 0
   282  000001                     send_byte_no_lib@c:
   283                           	opt stack 0
   284  000001                     delay_ms@n:
   285                           	opt stack 0
   286  000001                     ___lwdiv@dividend:
   287                           	opt stack 0
   288  000001                     ___ftpack@arg:
   289                           	opt stack 0
   290  000001                     ___ftge@ff1:
   291                           	opt stack 0
   292                           
   293                           ; 3 bytes @ 0x0
   294  000001                     	ds	1
   295  000002                     send_string_no_lib@p:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x1
   299  000002                     	ds	1
   300  000003                     ??_read_adc_raw_no_lib:
   301  000003                     delay_ms@i:
   302                           	opt stack 0
   303  000003                     ___lwdiv@divisor:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x2
   307  000003                     	ds	1
   308  000004                     delay_cycles@n:
   309                           	opt stack 0
   310  000004                     ___ftpack@exp:
   311                           	opt stack 0
   312  000004                     ___ftge@ff2:
   313                           	opt stack 0
   314                           
   315                           ; 3 bytes @ 0x3
   316  000004                     	ds	1
   317  000005                     ___ftpack@sign:
   318                           	opt stack 0
   319  000005                     delay_cycles@x:
   320                           	opt stack 0
   321  000005                     read_adc_raw_no_lib@raw_value:
   322                           	opt stack 0
   323  000005                     ___lwdiv@quotient:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0x4
   327  000005                     	ds	1
   328  000006                     ??___ftpack:
   329                           
   330                           ; 1 bytes @ 0x5
   331  000006                     	ds	1
   332  000007                     ??_lcd_send_nibble:
   333  000007                     ??___ftge:
   334  000007                     read_adc_raw_no_lib@channel:
   335                           	opt stack 0
   336  000007                     ___lwdiv@counter:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x6
   340  000007                     	ds	1
   341  000008                     ?___lwmod:
   342                           	opt stack 0
   343  000008                     lcd_send_nibble@n:
   344                           	opt stack 0
   345  000008                     ___lwmod@dividend:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x7
   349  000008                     	ds	1
   350  000009                     ?___awtoft:
   351                           	opt stack 0
   352  000009                     lcd_send_byte@n:
   353                           	opt stack 0
   354  000009                     ___awtoft@c:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x8
   358  000009                     	ds	1
   359  00000A                     lcd_send_byte@cm_data:
   360                           	opt stack 0
   361  00000A                     ___lwmod@divisor:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x9
   365  00000A                     	ds	1
   366  00000B                     lcd_init@i:
   367                           	opt stack 0
   368  00000B                     lcd_gotoxy@y:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0xA
   372  00000B                     	ds	1
   373  00000C                     lcd_gotoxy@x:
   374                           	opt stack 0
   375  00000C                     ___awtoft@sign:
   376                           	opt stack 0
   377  00000C                     ___lwmod@counter:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0xB
   381  00000C                     	ds	1
   382  00000D                     ?_sprintf:
   383                           	opt stack 0
   384  00000D                     ?___ftdiv:
   385                           	opt stack 0
   386  00000D                     lcd_gotoxy@address:
   387                           	opt stack 0
   388  00000D                     sprintf@sp:
   389                           	opt stack 0
   390  00000D                     ___ftdiv@f1:
   391                           	opt stack 0
   392                           
   393                           ; 3 bytes @ 0xC
   394  00000D                     	ds	1
   395  00000E                     lcd_putc@c:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0xD
   399  00000E                     	ds	1
   400  00000F                     lcd_puts@s:
   401                           	opt stack 0
   402  00000F                     sprintf@f:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0xE
   406  00000F                     	ds	1
   407  000010                     ___ftdiv@f2:
   408                           	opt stack 0
   409                           
   410                           ; 3 bytes @ 0xF
   411  000010                     	ds	1
   412  000011                     
   413                           ; 1 bytes @ 0x10
   414  000011                     	ds	2
   415  000013                     ??_sprintf:
   416  000013                     ??___ftdiv:
   417                           
   418                           ; 1 bytes @ 0x12
   419  000013                     	ds	1
   420  000014                     sprintf@flag:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x13
   424  000014                     	ds	1
   425  000015                     sprintf@prec:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x14
   429  000015                     	ds	1
   430  000016                     ___ftdiv@cntr:
   431                           	opt stack 0
   432  000016                     sprintf@ap:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x15
   436  000016                     	ds	1
   437  000017                     ___ftdiv@f3:
   438                           	opt stack 0
   439                           
   440                           ; 3 bytes @ 0x16
   441  000017                     	ds	1
   442  000018                     sprintf@val:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x17
   446  000018                     	ds	2
   447  00001A                     sprintf@c:
   448                           	opt stack 0
   449  00001A                     ___ftdiv@exp:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x19
   453  00001A                     	ds	1
   454  00001B                     ___ftdiv@sign:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x1A
   458  00001B                     	ds	1
   459  00001C                     ?___ftmul:
   460                           	opt stack 0
   461  00001C                     ___ftmul@f1:
   462                           	opt stack 0
   463                           
   464                           ; 3 bytes @ 0x1B
   465  00001C                     	ds	3
   466  00001F                     ___ftmul@f2:
   467                           	opt stack 0
   468                           
   469                           ; 3 bytes @ 0x1E
   470  00001F                     	ds	3
   471  000022                     ??___ftmul:
   472                           
   473                           ; 1 bytes @ 0x21
   474  000022                     	ds	3
   475  000025                     ___ftmul@exp:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x24
   479  000025                     	ds	1
   480  000026                     ___ftmul@f3_as_product:
   481                           	opt stack 0
   482                           
   483                           ; 3 bytes @ 0x25
   484  000026                     	ds	3
   485  000029                     ___ftmul@cntr:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x28
   489  000029                     	ds	1
   490  00002A                     ___ftmul@sign:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x29
   494  00002A                     	ds	1
   495  00002B                     main@buffer:
   496                           	opt stack 0
   497                           
   498                           ; 64 bytes @ 0x2A
   499  00002B                     	ds	64
   500  00006B                     main@currentState:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x6A
   504  00006B                     	ds	2
   505  00006D                     main@temp:
   506                           	opt stack 0
   507                           
   508                           ; 3 bytes @ 0x6C
   509  00006D                     	ds	3
   510  000070                     main@adc_value1:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x6F
   514  000070                     	ds	2
   515  000072                     _main$658:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x71
   519  000072                     	ds	2
   520  000074                     main@counter:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x73
   524  000074                     	ds	2
   525  000076                     main@prevState:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x75
   529  000076                     	ds	2
   530  000078                     main@x:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x77
   534  000078                     	ds	1
   535  000079                     main@ir_sensor:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x78
   539  000079                     	ds	1
   540                           tblptru	equ	0xFF8
   541                           tblptrh	equ	0xFF7
   542                           tblptrl	equ	0xFF6
   543                           tablat	equ	0xFF5
   544                           postinc0	equ	0xFEE
   545                           postdec1	equ	0xFE5
   546                           fsr1l	equ	0xFE1
   547                           
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 81 in file "project.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  temp            3  108[COMRAM] float 
   558 ;;  adc_value1      2  111[COMRAM] int 
   559 ;;  ir_sensor       1  120[COMRAM] unsigned char 
   560 ;;  buffer         64   42[COMRAM] unsigned char [64]
   561 ;;  prevState       2  117[COMRAM] int 
   562 ;;  counter         2  115[COMRAM] int 
   563 ;;  currentState    2  106[COMRAM] int 
   564 ;;  x               1  119[COMRAM] unsigned char 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Locals:        79       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Totals:        79       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;Total ram usage:       79 bytes
   579 ;; Hardware stack levels required when called:    6
   580 ;; This function calls:
   581 ;;		___awtoft
   582 ;;		___ftdiv
   583 ;;		___ftge
   584 ;;		___ftmul
   585 ;;		_delay_ms
   586 ;;		_initPorts
   587 ;;		_init_adc_no_lib
   588 ;;		_is_byte_available
   589 ;;		_lcd_gotoxy
   590 ;;		_lcd_init
   591 ;;		_lcd_putc
   592 ;;		_lcd_puts
   593 ;;		_read_adc_raw_no_lib
   594 ;;		_read_byte_no_lib
   595 ;;		_send_string_no_lib
   596 ;;		_setupSerial
   597 ;;		_sprintf
   598 ;; This function is called by:
   599 ;;		Startup code after reset
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text0
   604  00105A                     __ptext0:
   605                           	opt stack 0
   606  00105A                     _main:
   607                           	opt stack 25
   608                           
   609                           ;project.c: 82: INTCON = 0;
   610                           
   611                           ;incstack = 0
   612  00105A  0E00               	movlw	0
   613  00105C  6EF2               	movwf	intcon,c	;volatile
   614                           
   615                           ;project.c: 83: initPorts();
   616  00105E  EC3C  F00D         	call	_initPorts	;wreg free
   617                           
   618                           ;project.c: 84: setupSerial();
   619  001062  EC65  F00D         	call	_setupSerial	;wreg free
   620                           
   621                           ;project.c: 85: char buffer[64];
   622                           ;project.c: 86: init_adc_no_lib();
   623  001066  EC9C  F00D         	call	_init_adc_no_lib	;wreg free
   624                           
   625                           ;project.c: 87: lcd_init();
   626  00106A  EC96  F00B         	call	_lcd_init	;wreg free
   627                           
   628                           ;project.c: 88: lcd_putc('\f');
   629  00106E  0E0C               	movlw	12
   630  001070  EC1D  F00C         	call	_lcd_putc
   631                           
   632                           ;project.c: 90: lcd_gotoxy(1, 1);
   633  001074  0E01               	movlw	1
   634  001076  6E0B               	movwf	lcd_gotoxy@y,c
   635  001078  0E01               	movlw	1
   636  00107A  ECB6  F00C         	call	_lcd_gotoxy
   637                           
   638                           ;project.c: 91: lcd_puts(" Anwar & Abood");
   639  00107E  0E3B               	movlw	low STR_1
   640  001080  6E0F               	movwf	lcd_puts@s,c
   641  001082  0E10               	movlw	high STR_1
   642  001084  6E10               	movwf	lcd_puts@s+1,c
   643  001086  ECF2  F00B         	call	_lcd_puts	;wreg free
   644                           
   645                           ;project.c: 92: sprintf(buffer, " Anwar & Abood\r\n");
   646  00108A  0E2B               	movlw	low main@buffer
   647  00108C  6E0D               	movwf	sprintf@sp,c
   648  00108E  0E00               	movlw	high main@buffer
   649  001090  6E0E               	movwf	sprintf@sp+1,c
   650  001092  0E0B               	movlw	low STR_2
   651  001094  6E0F               	movwf	sprintf@f,c
   652  001096  0E10               	movlw	high STR_2
   653  001098  6E10               	movwf	sprintf@f+1,c
   654  00109A  EC56  F009         	call	_sprintf	;wreg free
   655                           
   656                           ;project.c: 93: send_string_no_lib(buffer);
   657  00109E  0E2B               	movlw	low main@buffer
   658  0010A0  6E02               	movwf	send_string_no_lib@p,c
   659  0010A2  0E00               	movlw	high main@buffer
   660  0010A4  6E03               	movwf	send_string_no_lib@p+1,c
   661  0010A6  ECC7  F00B         	call	_send_string_no_lib	;wreg free
   662                           
   663                           ;project.c: 95: delay_ms(5000);
   664  0010AA  0E13               	movlw	19
   665  0010AC  6E02               	movwf	delay_ms@n+1,c
   666  0010AE  0E88               	movlw	136
   667  0010B0  6E01               	movwf	delay_ms@n,c
   668  0010B2  EC51  F00D         	call	_delay_ms	;wreg free
   669                           
   670                           ;project.c: 97: lcd_putc('\f');
   671  0010B6  0E0C               	movlw	12
   672  0010B8  EC1D  F00C         	call	_lcd_putc
   673                           
   674                           ;project.c: 99: char x;
   675                           ;project.c: 101: int counter = 0;
   676  0010BC  0E00               	movlw	0
   677  0010BE  6E75               	movwf	main@counter+1,c
   678  0010C0  0E00               	movlw	0
   679  0010C2  6E74               	movwf	main@counter,c
   680                           
   681                           ;project.c: 102: int currentState = 0;
   682  0010C4  0E00               	movlw	0
   683  0010C6  6E6C               	movwf	main@currentState+1,c
   684  0010C8  0E00               	movlw	0
   685  0010CA  6E6B               	movwf	main@currentState,c
   686                           
   687                           ;project.c: 103: int prevState = 0;
   688  0010CC  0E00               	movlw	0
   689  0010CE  6E77               	movwf	main@prevState+1,c
   690  0010D0  0E00               	movlw	0
   691  0010D2  6E76               	movwf	main@prevState,c
   692  0010D4                     
   693                           ;project.c: 105: lcd_gotoxy(1, 2);
   694  0010D4  0E02               	movlw	2
   695  0010D6  6E0B               	movwf	lcd_gotoxy@y,c
   696  0010D8  0E01               	movlw	1
   697  0010DA  ECB6  F00C         	call	_lcd_gotoxy
   698                           
   699                           ;project.c: 106: lcd_puts(" Anwar & Abood");
   700  0010DE  0E3B               	movlw	low STR_1
   701  0010E0  6E0F               	movwf	lcd_puts@s,c
   702  0010E2  0E10               	movlw	high STR_1
   703  0010E4  6E10               	movwf	lcd_puts@s+1,c
   704  0010E6  ECF2  F00B         	call	_lcd_puts	;wreg free
   705                           
   706                           ;project.c: 107: if(PORTBbits.RB7 == 0){
   707  0010EA  BE81               	btfsc	3969,7,c	;volatile
   708  0010EC  D00A               	goto	l193
   709                           
   710                           ;project.c: 108: delay_ms(100);
   711  0010EE  0E00               	movlw	0
   712  0010F0  6E02               	movwf	delay_ms@n+1,c
   713  0010F2  0E64               	movlw	100
   714  0010F4  6E01               	movwf	delay_ms@n,c
   715  0010F6  EC51  F00D         	call	_delay_ms	;wreg free
   716                           
   717                           ;project.c: 110: counter = 0;
   718  0010FA  0E00               	movlw	0
   719  0010FC  6E75               	movwf	main@counter+1,c
   720  0010FE  0E00               	movlw	0
   721  001100  6E74               	movwf	main@counter,c
   722  001102                     l193:
   723                           
   724                           ;project.c: 111: }
   725                           ;project.c: 113: char ir_sensor = PORTAbits.RA3 == 0 ? '0' : '1';
   726  001102  A680               	btfss	3968,3,c	;volatile
   727  001104  D004               	goto	l195
   728  001106  0E00               	movlw	0
   729  001108  6E73               	movwf	_main$658+1,c
   730  00110A  0E31               	movlw	49
   731  00110C  D003               	goto	L1
   732  00110E                     l195:
   733  00110E  0E00               	movlw	0
   734  001110  6E73               	movwf	_main$658+1,c
   735  001112  0E30               	movlw	48
   736  001114                     L1:
   737  001114  6E72               	movwf	_main$658,c
   738  001116  C072  F079         	movff	_main$658,main@ir_sensor
   739                           
   740                           ;project.c: 114: int adc_value1 = read_adc_raw_no_lib(0);
   741  00111A  0E00               	movlw	0
   742  00111C  ECD7  F00C         	call	_read_adc_raw_no_lib
   743  001120  C001  F070         	movff	?_read_adc_raw_no_lib,main@adc_value1
   744  001124  C002  F071         	movff	?_read_adc_raw_no_lib+1,main@adc_value1+1
   745                           
   746                           ;project.c: 115: float temp = (adc_value1 / 1023.0) * 500.0;
   747  001128  0EC0               	movlw	192
   748  00112A  6E10               	movwf	___ftdiv@f2,c
   749  00112C  0E7F               	movlw	127
   750  00112E  6E11               	movwf	___ftdiv@f2+1,c
   751  001130  0E44               	movlw	68
   752  001132  6E12               	movwf	___ftdiv@f2+2,c
   753  001134  C070  F009         	movff	main@adc_value1,___awtoft@c
   754  001138  C071  F00A         	movff	main@adc_value1+1,___awtoft@c+1
   755  00113C  ECF4  F00C         	call	___awtoft	;wreg free
   756  001140  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   757  001144  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   758  001148  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   759  00114C  EC84  F00A         	call	___ftdiv	;wreg free
   760  001150  C00D  F01C         	movff	?___ftdiv,___ftmul@f1
   761  001154  C00E  F01D         	movff	?___ftdiv+1,___ftmul@f1+1
   762  001158  C00F  F01E         	movff	?___ftdiv+2,___ftmul@f1+2
   763  00115C  0E00               	movlw	0
   764  00115E  6E1F               	movwf	___ftmul@f2,c
   765  001160  0EFA               	movlw	250
   766  001162  6E20               	movwf	___ftmul@f2+1,c
   767  001164  0E43               	movlw	67
   768  001166  6E21               	movwf	___ftmul@f2+2,c
   769  001168  EC0A  F00A         	call	___ftmul	;wreg free
   770  00116C  C01C  F06D         	movff	?___ftmul,main@temp
   771  001170  C01D  F06E         	movff	?___ftmul+1,main@temp+1
   772  001174  C01E  F06F         	movff	?___ftmul+2,main@temp+2
   773                           
   774                           ;project.c: 117: if(temp > 45.0){
   775  001178  0E00               	movlw	0
   776  00117A  6E01               	movwf	___ftge@ff1,c
   777  00117C  0E34               	movlw	52
   778  00117E  6E02               	movwf	___ftge@ff1+1,c
   779  001180  0E42               	movlw	66
   780  001182  6E03               	movwf	___ftge@ff1+2,c
   781  001184  C06D  F004         	movff	main@temp,___ftge@ff2
   782  001188  C06E  F005         	movff	main@temp+1,___ftge@ff2+1
   783  00118C  C06F  F006         	movff	main@temp+2,___ftge@ff2+2
   784  001190  EC4E  F00B         	call	___ftge	;wreg free
   785  001194  B0D8               	btfsc	status,0,c
   786  001196  D017               	goto	l198
   787                           
   788                           ;project.c: 118: PORTDbits.RD0 = 1;
   789  001198  8083               	bsf	3971,0,c	;volatile
   790                           
   791                           ;project.c: 119: sprintf(buffer, "Temp Alert!   ");
   792  00119A  0E2B               	movlw	low main@buffer
   793  00119C  6E0D               	movwf	sprintf@sp,c
   794  00119E  0E00               	movlw	high main@buffer
   795  0011A0  6E0E               	movwf	sprintf@sp+1,c
   796  0011A2  0E2C               	movlw	low STR_4
   797  0011A4  6E0F               	movwf	sprintf@f,c
   798  0011A6  0E10               	movlw	high STR_4
   799  0011A8  6E10               	movwf	sprintf@f+1,c
   800  0011AA  EC56  F009         	call	_sprintf	;wreg free
   801                           
   802                           ;project.c: 120: lcd_gotoxy(1,1);
   803  0011AE  0E01               	movlw	1
   804  0011B0  6E0B               	movwf	lcd_gotoxy@y,c
   805  0011B2  0E01               	movlw	1
   806  0011B4  ECB6  F00C         	call	_lcd_gotoxy
   807                           
   808                           ;project.c: 121: lcd_puts(buffer);
   809  0011B8  0E2B               	movlw	low main@buffer
   810  0011BA  6E0F               	movwf	lcd_puts@s,c
   811  0011BC  0E00               	movlw	high main@buffer
   812  0011BE  6E10               	movwf	lcd_puts@s+1,c
   813  0011C0  ECF2  F00B         	call	_lcd_puts	;wreg free
   814                           
   815                           ;project.c: 122: }
   816  0011C4  D03A               	goto	l199
   817  0011C6                     l198:
   818                           
   819                           ;project.c: 123: else{
   820                           ;project.c: 124: currentState = ir_sensor;
   821  0011C6  C079  F06B         	movff	main@ir_sensor,main@currentState
   822  0011CA  6A6C               	clrf	main@currentState+1,c
   823                           
   824                           ;project.c: 125: if(prevState == 1 & ir_sensor == '1'){
   825  0011CC  0476               	decf	main@prevState,w,c
   826  0011CE  1077               	iorwf	main@prevState+1,w,c
   827  0011D0  A4D8               	btfss	status,2,c
   828  0011D2  D007               	goto	l200
   829  0011D4  0E31               	movlw	49
   830  0011D6  1879               	xorwf	main@ir_sensor,w,c
   831  0011D8  A4D8               	btfss	status,2,c
   832  0011DA  D003               	goto	l200
   833                           
   834                           ;project.c: 126: counter++;
   835  0011DC  4A74               	infsnz	main@counter,f,c
   836  0011DE  2A75               	incf	main@counter+1,f,c
   837                           
   838                           ;project.c: 128: }
   839  0011E0  D007               	goto	l203
   840  0011E2                     l200:
   841                           
   842                           ;project.c: 129: else if(ir_sensor=='0'){
   843  0011E2  0E30               	movlw	48
   844  0011E4  1879               	xorwf	main@ir_sensor,w,c
   845  0011E6  A4D8               	btfss	status,2,c
   846  0011E8  D002               	goto	l202
   847                           
   848                           ;project.c: 130: PORTDbits.RD0 = 1;
   849  0011EA  8083               	bsf	3971,0,c	;volatile
   850                           
   851                           ;project.c: 131: }
   852  0011EC  D001               	goto	l203
   853  0011EE                     l202:
   854                           
   855                           ;project.c: 132: else {
   856                           ;project.c: 133: PORTDbits.RD0 = 0;
   857  0011EE  9083               	bcf	3971,0,c	;volatile
   858  0011F0                     l203:
   859                           
   860                           ;project.c: 134: }
   861                           ;project.c: 135: if(ir_sensor == '0'){
   862  0011F0  0E30               	movlw	48
   863  0011F2  1879               	xorwf	main@ir_sensor,w,c
   864  0011F4  A4D8               	btfss	status,2,c
   865  0011F6  D004               	goto	l204
   866                           
   867                           ;project.c: 136: prevState = 1;
   868  0011F8  0E00               	movlw	0
   869  0011FA  6E77               	movwf	main@prevState+1,c
   870  0011FC  0E01               	movlw	1
   871  0011FE  D003               	goto	L2
   872  001200                     l204:
   873                           
   874                           ;project.c: 139: else{
   875                           ;project.c: 140: prevState = 0;
   876  001200  0E00               	movlw	0
   877  001202  6E77               	movwf	main@prevState+1,c
   878  001204  0E00               	movlw	0
   879  001206                     L2:
   880  001206  6E76               	movwf	main@prevState,c
   881                           
   882                           ;project.c: 142: }
   883                           ;project.c: 144: sprintf(buffer, "Counter : %d   ", counter);
   884  001208  0E2B               	movlw	low main@buffer
   885  00120A  6E0D               	movwf	sprintf@sp,c
   886  00120C  0E00               	movlw	high main@buffer
   887  00120E  6E0E               	movwf	sprintf@sp+1,c
   888  001210  0E1C               	movlw	low STR_5
   889  001212  6E0F               	movwf	sprintf@f,c
   890  001214  0E10               	movlw	high STR_5
   891  001216  6E10               	movwf	sprintf@f+1,c
   892  001218  C074  F011         	movff	main@counter,?_sprintf+4
   893  00121C  C075  F012         	movff	main@counter+1,?_sprintf+5
   894  001220  EC56  F009         	call	_sprintf	;wreg free
   895                           
   896                           ;project.c: 145: lcd_gotoxy(1,1);
   897  001224  0E01               	movlw	1
   898  001226  6E0B               	movwf	lcd_gotoxy@y,c
   899  001228  0E01               	movlw	1
   900  00122A  ECB6  F00C         	call	_lcd_gotoxy
   901                           
   902                           ;project.c: 146: lcd_puts(buffer);
   903  00122E  0E2B               	movlw	low main@buffer
   904  001230  6E0F               	movwf	lcd_puts@s,c
   905  001232  0E00               	movlw	high main@buffer
   906  001234  6E10               	movwf	lcd_puts@s+1,c
   907  001236  ECF2  F00B         	call	_lcd_puts	;wreg free
   908  00123A                     l199:
   909                           
   910                           ;project.c: 147: }
   911                           ;project.c: 148: if (is_byte_available()) {
   912  00123A  EC88  F00D         	call	_is_byte_available	;wreg free
   913  00123E  0900               	iorlw	0
   914  001240  B4D8               	btfsc	status,2,c
   915  001242  D02D               	goto	l206
   916                           
   917                           ;project.c: 149: x = read_byte_no_lib();
   918  001244  ECA2  F00D         	call	_read_byte_no_lib	;wreg free
   919  001248  6E78               	movwf	main@x,c
   920                           
   921                           ;project.c: 150: sprintf(buffer, "%c", x);
   922  00124A  0E2B               	movlw	low main@buffer
   923  00124C  6E0D               	movwf	sprintf@sp,c
   924  00124E  0E00               	movlw	high main@buffer
   925  001250  6E0E               	movwf	sprintf@sp+1,c
   926  001252  0E56               	movlw	low STR_6
   927  001254  6E0F               	movwf	sprintf@f,c
   928  001256  0E10               	movlw	high STR_6
   929  001258  6E10               	movwf	sprintf@f+1,c
   930  00125A  C078  F011         	movff	main@x,?_sprintf+4
   931  00125E  6A12               	clrf	?_sprintf+5,c
   932  001260  EC56  F009         	call	_sprintf	;wreg free
   933                           
   934                           ;project.c: 151: lcd_gotoxy(14, 1);
   935  001264  0E01               	movlw	1
   936  001266  6E0B               	movwf	lcd_gotoxy@y,c
   937  001268  0E0E               	movlw	14
   938  00126A  ECB6  F00C         	call	_lcd_gotoxy
   939                           
   940                           ;project.c: 152: lcd_puts(buffer);
   941  00126E  0E2B               	movlw	low main@buffer
   942  001270  6E0F               	movwf	lcd_puts@s,c
   943  001272  0E00               	movlw	high main@buffer
   944  001274  6E10               	movwf	lcd_puts@s+1,c
   945  001276  ECF2  F00B         	call	_lcd_puts	;wreg free
   946                           
   947                           ;project.c: 154: if (x == 'b') {
   948  00127A  0E62               	movlw	98
   949  00127C  1878               	xorwf	main@x,w,c
   950  00127E  A4D8               	btfss	status,2,c
   951  001280  D00D               	goto	l207
   952                           
   953                           ;project.c: 156: PORTDbits.RD0 = 1;
   954  001282  8083               	bsf	3971,0,c	;volatile
   955                           
   956                           ;project.c: 157: delay_ms(5000);
   957  001284  0E13               	movlw	19
   958  001286  6E02               	movwf	delay_ms@n+1,c
   959  001288  0E88               	movlw	136
   960  00128A  6E01               	movwf	delay_ms@n,c
   961  00128C  EC51  F00D         	call	_delay_ms	;wreg free
   962                           
   963                           ;project.c: 158: send_string_no_lib("\n buzzer on");
   964  001290  0E4A               	movlw	low STR_7
   965  001292  6E02               	movwf	send_string_no_lib@p,c
   966  001294  0E10               	movlw	high STR_7
   967  001296  6E03               	movwf	send_string_no_lib@p+1,c
   968  001298  ECC7  F00B         	call	_send_string_no_lib	;wreg free
   969  00129C                     l207:
   970                           
   971                           ;project.c: 159: }
   972                           ;project.c: 161: PORTDbits.RD0 = 0;
   973  00129C  9083               	bcf	3971,0,c	;volatile
   974  00129E                     l206:
   975                           
   976                           ;project.c: 162: }
   977                           ;project.c: 165: delay_ms(100);
   978  00129E  0E00               	movlw	0
   979  0012A0  6E02               	movwf	delay_ms@n+1,c
   980  0012A2  0E64               	movlw	100
   981  0012A4  6E01               	movwf	delay_ms@n,c
   982  0012A6  EC51  F00D         	call	_delay_ms	;wreg free
   983  0012AA  D714               	goto	l192
   984  0012AC                     __end_of_main:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           postdec1	equ	0xFE5
   993                           fsr1l	equ	0xFE1
   994                           status	equ	0xFD8
   995                           
   996 ;; *************** function _sprintf *****************
   997 ;; Defined at:
   998 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1001 ;;		 -> main@buffer(64), 
  1002 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1003 ;;		 -> STR_6(3), STR_5(16), STR_4(15), STR_2(17), 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  tmpval          4    0        struct .
  1006 ;;  cp              3    0        PTR const unsigned char 
  1007 ;;  val             2   23[COMRAM] unsigned int 
  1008 ;;  ap              2   21[COMRAM] PTR void [1]
  1009 ;;		 -> ?_sprintf(2), 
  1010 ;;  len             2    0        unsigned int 
  1011 ;;  c               1   25[COMRAM] char 
  1012 ;;  prec            1   20[COMRAM] char 
  1013 ;;  flag            1   19[COMRAM] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  2   12[COMRAM] int 
  1016 ;; Registers used:
  1017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1023 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;Total ram usage:       14 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; Hardware stack levels required when called:    1
  1030 ;; This function calls:
  1031 ;;		___lwdiv
  1032 ;;		___lwmod
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text1
  1039  0012AC                     __ptext1:
  1040                           	opt stack 0
  1041  0012AC                     _sprintf:
  1042                           	opt stack 29
  1043                           
  1044                           ;doprnt.c: 494: va_list ap;
  1045                           ;doprnt.c: 499: signed char c;
  1046                           ;doprnt.c: 506: signed char prec;
  1047                           ;doprnt.c: 508: unsigned char flag;
  1048                           ;doprnt.c: 523: union {
  1049                           ;doprnt.c: 524: unsigned long vd;
  1050                           ;doprnt.c: 525: double integ;
  1051                           ;doprnt.c: 526: } tmpval;
  1052                           ;doprnt.c: 528: unsigned int val;
  1053                           ;doprnt.c: 529: unsigned len;
  1054                           ;doprnt.c: 530: const char * cp;
  1055                           ;doprnt.c: 533: *ap = __va_start();
  1056                           
  1057                           ;incstack = 0
  1058  0012AC  0E11               	movlw	low (?_sprintf+4)
  1059  0012AE  6E16               	movwf	sprintf@ap,c
  1060  0012B0  0E00               	movlw	high (?_sprintf+4)
  1061  0012B2  6E17               	movwf	sprintf@ap+1,c
  1062                           
  1063                           ;doprnt.c: 536: while(c = *f++) {
  1064  0012B4  D09C               	goto	u1050
  1065  0012B6                     
  1066                           ;doprnt.c: 538: if(c != '%')
  1067  0012B6  0E25               	movlw	37
  1068  0012B8  181A               	xorwf	sprintf@c,w,c
  1069  0012BA  B4D8               	btfsc	status,2,c
  1070  0012BC  D004               	goto	l230
  1071  0012BE  D010               	goto	l238
  1072  0012C0                     l1708:
  1073  0012C0  4A0D               	infsnz	sprintf@sp,f,c
  1074  0012C2  2A0E               	incf	sprintf@sp+1,f,c
  1075                           
  1076                           ;doprnt.c: 542: continue;
  1077  0012C4  D094               	goto	u1050
  1078  0012C6                     l230:
  1079                           
  1080                           ;doprnt.c: 543: }
  1081                           ;doprnt.c: 548: flag = 0;
  1082  0012C6  0E00               	movlw	0
  1083  0012C8  6E14               	movwf	sprintf@flag,c
  1084                           
  1085                           ;doprnt.c: 635: switch(c = *f++) {
  1086  0012CA  D011               	goto	l231
  1087  0012CC                     
  1088                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  1089  0012CC  C016  FFD9         	movff	sprintf@ap,fsr2l
  1090  0012D0  C017  FFDA         	movff	sprintf@ap+1,fsr2h
  1091  0012D4  50DF               	movf	indf2,w,c
  1092  0012D6  6E1A               	movwf	sprintf@c,c
  1093  0012D8  0E02               	movlw	2
  1094  0012DA  2616               	addwf	sprintf@ap,f,c
  1095  0012DC  0E00               	movlw	0
  1096  0012DE  2217               	addwfc	sprintf@ap+1,f,c
  1097  0012E0                     l238:
  1098                           
  1099                           ;doprnt.c: 809: ((*sp++ = (c)));
  1100  0012E0  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1101  0012E4  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1102  0012E8  C01A  FFDF         	movff	sprintf@c,indf2
  1103  0012EC  D7E9               	goto	l1708
  1104  0012EE                     l231:
  1105  0012EE  C00F  FFF6         	movff	sprintf@f,tblptrl
  1106  0012F2  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1107  0012F6  4A0F               	infsnz	sprintf@f,f,c
  1108  0012F8  2A10               	incf	sprintf@f+1,f,c
  1109  0012FA                     	if	0	;tblptru may be non-zero
  1110  0012FA                     	endif
  1111  0012FA                     	if	0	;tblptru may be non-zero
  1112  0012FA                     	endif
  1113  0012FA  0008               	tblrd		*
  1114  0012FC  CFF5 F01A          	movff	tablat,sprintf@c
  1115  001300  501A               	movf	sprintf@c,w,c
  1116                           
  1117                           ; Switch size 1, requested type "space"
  1118                           ; Number of cases is 4, Range of values is 0 to 105
  1119                           ; switch strategies available:
  1120                           ; Name         Instructions Cycles
  1121                           ; simple_byte           13     7 (average)
  1122                           ;	Chosen strategy is simple_byte
  1123  001302  0A00               	xorlw	0	; case 0
  1124  001304  B4D8               	btfsc	status,2,c
  1125  001306  D07F               	goto	u1060
  1126  001308  0A63               	xorlw	99	; case 99
  1127  00130A  B4D8               	btfsc	status,2,c
  1128  00130C  D7DF               	goto	l237
  1129  00130E  0A07               	xorlw	7	; case 100
  1130  001310  B4D8               	btfsc	status,2,c
  1131  001312  D003               	goto	l236
  1132  001314  0A0D               	xorlw	13	; case 105
  1133  001316  A4D8               	btfss	status,2,c
  1134  001318  D7E3               	goto	l238
  1135  00131A                     l236:
  1136                           
  1137                           ;doprnt.c: 1253: {
  1138                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1139  00131A  C016  FFD9         	movff	sprintf@ap,fsr2l
  1140  00131E  C017  FFDA         	movff	sprintf@ap+1,fsr2h
  1141  001322  CFDE F018          	movff	postinc2,sprintf@val
  1142  001326  CFDD F019          	movff	postdec2,sprintf@val+1
  1143  00132A  0E02               	movlw	2
  1144  00132C  2616               	addwf	sprintf@ap,f,c
  1145  00132E  0E00               	movlw	0
  1146  001330  2217               	addwfc	sprintf@ap+1,f,c
  1147                           
  1148                           ;doprnt.c: 1261: if((int)val < 0) {
  1149  001332  AE19               	btfss	sprintf@val+1,7,c
  1150  001334  D006               	goto	l239
  1151                           
  1152                           ;doprnt.c: 1262: flag |= 0x03;
  1153  001336  0E03               	movlw	3
  1154  001338  1214               	iorwf	sprintf@flag,f,c
  1155                           
  1156                           ;doprnt.c: 1263: val = -val;
  1157  00133A  6C18               	negf	sprintf@val,c
  1158  00133C  1E19               	comf	sprintf@val+1,f,c
  1159  00133E  B0D8               	btfsc	status,0,c
  1160  001340  2A19               	incf	sprintf@val+1,f,c
  1161  001342                     l239:
  1162                           
  1163                           ;doprnt.c: 1264: }
  1164                           ;doprnt.c: 1266: }
  1165                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1166  001342  0E01               	movlw	1
  1167  001344  6E1A               	movwf	sprintf@c,c
  1168  001346                     l1736:
  1169  001346  0E05               	movlw	5
  1170  001348  181A               	xorwf	sprintf@c,w,c
  1171  00134A  B4D8               	btfsc	status,2,c
  1172  00134C  D012               	goto	u1030
  1173                           
  1174                           ;doprnt.c: 1306: if(val < dpowers[c])
  1175  00134E  501A               	movf	sprintf@c,w,c
  1176  001350  0D02               	mullw	2
  1177  001352  0E01               	movlw	low _dpowers
  1178  001354  24F3               	addwf	prodl,w,c
  1179  001356  6EF6               	movwf	tblptrl,c
  1180  001358  0E10               	movlw	high _dpowers
  1181  00135A  20F4               	addwfc	prodh,w,c
  1182  00135C  6EF7               	movwf	tblptrh,c
  1183  00135E                     	if	0	;There are less than 3 active tblptr bytes
  1184  00135E                     	endif
  1185  00135E  0009               	tblrd		*+
  1186  001360  50F5               	movf	tablat,w,c
  1187  001362  5C18               	subwf	sprintf@val,w,c
  1188  001364  0009               	tblrd		*+
  1189  001366  50F5               	movf	tablat,w,c
  1190  001368  5819               	subwfb	sprintf@val+1,w,c
  1191  00136A  A0D8               	btfss	status,0,c
  1192  00136C  D002               	goto	u1030
  1193                           
  1194                           ;doprnt.c: 1307: break;
  1195  00136E  2A1A               	incf	sprintf@c,f,c
  1196  001370  D7EA               	goto	l1736
  1197  001372                     u1030:
  1198                           
  1199                           ;doprnt.c: 1422: {
  1200                           ;doprnt.c: 1438: if(flag & 0x03)
  1201  001372  C014  F013         	movff	sprintf@flag,??_sprintf
  1202  001376  0E03               	movlw	3
  1203  001378  1613               	andwf	??_sprintf,f,c
  1204  00137A  B4D8               	btfsc	status,2,c
  1205  00137C  D008               	goto	l243
  1206                           
  1207                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1208  00137E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1209  001382  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1210  001386  0E2D               	movlw	45
  1211  001388  6EDF               	movwf	indf2,c
  1212  00138A  4A0D               	infsnz	sprintf@sp,f,c
  1213  00138C  2A0E               	incf	sprintf@sp+1,f,c
  1214  00138E                     l243:
  1215                           
  1216                           ;doprnt.c: 1469: }
  1217                           ;doprnt.c: 1472: prec = c;
  1218  00138E  C01A  F015         	movff	sprintf@c,sprintf@prec
  1219                           
  1220                           ;doprnt.c: 1474: while(prec--) {
  1221  001392  D029               	goto	l244
  1222  001394                     
  1223                           ;doprnt.c: 1478: {
  1224                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1225  001394  5015               	movf	sprintf@prec,w,c
  1226  001396  0D02               	mullw	2
  1227  001398  0E01               	movlw	low _dpowers
  1228  00139A  24F3               	addwf	prodl,w,c
  1229  00139C  6EF6               	movwf	tblptrl,c
  1230  00139E  0E10               	movlw	high _dpowers
  1231  0013A0  20F4               	addwfc	prodh,w,c
  1232  0013A2  6EF7               	movwf	tblptrh,c
  1233  0013A4                     	if	0	;There are less than 3 active tblptr bytes
  1234  0013A4                     	endif
  1235  0013A4  0009               	tblrd		*+
  1236  0013A6  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1237  0013AA  000A               	tblrd		*-
  1238  0013AC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1239  0013B0  C018  F001         	movff	sprintf@val,___lwdiv@dividend
  1240  0013B4  C019  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1241  0013B8  EC48  F00C         	call	___lwdiv	;wreg free
  1242  0013BC  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1243  0013C0  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1244  0013C4  0E00               	movlw	0
  1245  0013C6  6E0B               	movwf	___lwmod@divisor+1,c
  1246  0013C8  0E0A               	movlw	10
  1247  0013CA  6E0A               	movwf	___lwmod@divisor,c
  1248  0013CC  EC95  F00C         	call	___lwmod	;wreg free
  1249  0013D0  5008               	movf	?___lwmod,w,c
  1250  0013D2  0F30               	addlw	48
  1251  0013D4  6E1A               	movwf	sprintf@c,c
  1252                           
  1253                           ;doprnt.c: 1523: }
  1254                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1255  0013D6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1256  0013DA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1257  0013DE  C01A  FFDF         	movff	sprintf@c,indf2
  1258  0013E2  4A0D               	infsnz	sprintf@sp,f,c
  1259  0013E4  2A0E               	incf	sprintf@sp+1,f,c
  1260  0013E6                     l244:
  1261  0013E6  0615               	decf	sprintf@prec,f,c
  1262  0013E8  2815               	incf	sprintf@prec,w,c
  1263  0013EA  A4D8               	btfss	status,2,c
  1264  0013EC  D7D3               	goto	l245
  1265  0013EE                     u1050:
  1266  0013EE  C00F  FFF6         	movff	sprintf@f,tblptrl
  1267  0013F2  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1268  0013F6  4A0F               	infsnz	sprintf@f,f,c
  1269  0013F8  2A10               	incf	sprintf@f+1,f,c
  1270  0013FA                     	if	0	;tblptru may be non-zero
  1271  0013FA                     	endif
  1272  0013FA                     	if	0	;tblptru may be non-zero
  1273  0013FA                     	endif
  1274  0013FA  0008               	tblrd		*
  1275  0013FC  CFF5 F01A          	movff	tablat,sprintf@c
  1276  001400  501A               	movf	sprintf@c,w,c
  1277  001402  A4D8               	btfss	status,2,c
  1278  001404  D758               	goto	l229
  1279  001406                     u1060:
  1280                           
  1281                           ;doprnt.c: 1538: *sp = 0;
  1282                           
  1283                           ;doprnt.c: 1525: }
  1284                           ;doprnt.c: 1533: }
  1285                           ;doprnt.c: 1535: alldone:
  1286  001406  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1287  00140A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1288  00140E  0E00               	movlw	0
  1289  001410  6EDF               	movwf	indf2,c
  1290  001412  0012               	return	
  1291  001414                     __end_of_sprintf:
  1292                           	opt stack 0
  1293                           tblptru	equ	0xFF8
  1294                           tblptrh	equ	0xFF7
  1295                           tblptrl	equ	0xFF6
  1296                           tablat	equ	0xFF5
  1297                           prodh	equ	0xFF4
  1298                           prodl	equ	0xFF3
  1299                           intcon	equ	0xFF2
  1300                           postinc0	equ	0xFEE
  1301                           postdec1	equ	0xFE5
  1302                           fsr1l	equ	0xFE1
  1303                           indf2	equ	0xFDF
  1304                           postinc2	equ	0xFDE
  1305                           postdec2	equ	0xFDD
  1306                           fsr2h	equ	0xFDA
  1307                           fsr2l	equ	0xFD9
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function ___lwmod *****************
  1311 ;; Defined at:
  1312 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  dividend        2    7[COMRAM] unsigned int 
  1315 ;;  divisor         2    9[COMRAM] unsigned int 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  counter         1   11[COMRAM] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2    7[COMRAM] unsigned int 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;Total ram usage:        5 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_sprintf
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text2
  1341  00192A                     __ptext2:
  1342                           	opt stack 0
  1343  00192A                     ___lwmod:
  1344                           	opt stack 29
  1345                           
  1346                           ;incstack = 0
  1347  00192A  500A               	movf	___lwmod@divisor,w,c
  1348  00192C  100B               	iorwf	___lwmod@divisor+1,w,c
  1349  00192E  B4D8               	btfsc	status,2,c
  1350  001930  D018               	goto	l667
  1351  001932  0E01               	movlw	1
  1352  001934  6E0C               	movwf	___lwmod@counter,c
  1353  001936  D004               	goto	l662
  1354  001938  90D8               	bcf	status,0,c
  1355  00193A  360A               	rlcf	___lwmod@divisor,f,c
  1356  00193C  360B               	rlcf	___lwmod@divisor+1,f,c
  1357  00193E  2A0C               	incf	___lwmod@counter,f,c
  1358  001940                     l662:
  1359  001940  AE0B               	btfss	___lwmod@divisor+1,7,c
  1360  001942  D7FA               	goto	l663
  1361  001944                     u830:
  1362  001944  500A               	movf	___lwmod@divisor,w,c
  1363  001946  5C08               	subwf	___lwmod@dividend,w,c
  1364  001948  500B               	movf	___lwmod@divisor+1,w,c
  1365  00194A  5809               	subwfb	___lwmod@dividend+1,w,c
  1366  00194C  A0D8               	btfss	status,0,c
  1367  00194E  D004               	goto	l666
  1368  001950  500A               	movf	___lwmod@divisor,w,c
  1369  001952  5E08               	subwf	___lwmod@dividend,f,c
  1370  001954  500B               	movf	___lwmod@divisor+1,w,c
  1371  001956  5A09               	subwfb	___lwmod@dividend+1,f,c
  1372  001958                     l666:
  1373  001958  90D8               	bcf	status,0,c
  1374  00195A  320B               	rrcf	___lwmod@divisor+1,f,c
  1375  00195C  320A               	rrcf	___lwmod@divisor,f,c
  1376  00195E  2E0C               	decfsz	___lwmod@counter,f,c
  1377  001960  D7F1               	goto	u830
  1378  001962                     l667:
  1379  001962  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1380  001966  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1381  00196A  0012               	return		;funcret
  1382  00196C                     __end_of___lwmod:
  1383                           	opt stack 0
  1384                           tblptru	equ	0xFF8
  1385                           tblptrh	equ	0xFF7
  1386                           tblptrl	equ	0xFF6
  1387                           tablat	equ	0xFF5
  1388                           prodh	equ	0xFF4
  1389                           prodl	equ	0xFF3
  1390                           intcon	equ	0xFF2
  1391                           postinc0	equ	0xFEE
  1392                           postdec1	equ	0xFE5
  1393                           fsr1l	equ	0xFE1
  1394                           indf2	equ	0xFDF
  1395                           postinc2	equ	0xFDE
  1396                           postdec2	equ	0xFDD
  1397                           fsr2h	equ	0xFDA
  1398                           fsr2l	equ	0xFD9
  1399                           status	equ	0xFD8
  1400                           
  1401 ;; *************** function ___lwdiv *****************
  1402 ;; Defined at:
  1403 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  dividend        2    0[COMRAM] unsigned int 
  1406 ;;  divisor         2    2[COMRAM] unsigned int 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  quotient        2    4[COMRAM] unsigned int 
  1409 ;;  counter         1    6[COMRAM] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  2    0[COMRAM] unsigned int 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;Total ram usage:        7 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_sprintf
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text3
  1433  001890                     __ptext3:
  1434                           	opt stack 0
  1435  001890                     ___lwdiv:
  1436                           	opt stack 29
  1437                           
  1438                           ;incstack = 0
  1439  001890  0E00               	movlw	0
  1440  001892  6E06               	movwf	___lwdiv@quotient+1,c
  1441  001894  0E00               	movlw	0
  1442  001896  6E05               	movwf	___lwdiv@quotient,c
  1443  001898  5003               	movf	___lwdiv@divisor,w,c
  1444  00189A  1004               	iorwf	___lwdiv@divisor+1,w,c
  1445  00189C  B4D8               	btfsc	status,2,c
  1446  00189E  D01C               	goto	l657
  1447  0018A0  0E01               	movlw	1
  1448  0018A2  6E07               	movwf	___lwdiv@counter,c
  1449  0018A4  D004               	goto	l652
  1450  0018A6  90D8               	bcf	status,0,c
  1451  0018A8  3603               	rlcf	___lwdiv@divisor,f,c
  1452  0018AA  3604               	rlcf	___lwdiv@divisor+1,f,c
  1453  0018AC  2A07               	incf	___lwdiv@counter,f,c
  1454  0018AE                     l652:
  1455  0018AE  AE04               	btfss	___lwdiv@divisor+1,7,c
  1456  0018B0  D7FA               	goto	l653
  1457  0018B2                     u800:
  1458  0018B2  90D8               	bcf	status,0,c
  1459  0018B4  3605               	rlcf	___lwdiv@quotient,f,c
  1460  0018B6  3606               	rlcf	___lwdiv@quotient+1,f,c
  1461  0018B8  5003               	movf	___lwdiv@divisor,w,c
  1462  0018BA  5C01               	subwf	___lwdiv@dividend,w,c
  1463  0018BC  5004               	movf	___lwdiv@divisor+1,w,c
  1464  0018BE  5802               	subwfb	___lwdiv@dividend+1,w,c
  1465  0018C0  A0D8               	btfss	status,0,c
  1466  0018C2  D005               	goto	l656
  1467  0018C4  5003               	movf	___lwdiv@divisor,w,c
  1468  0018C6  5E01               	subwf	___lwdiv@dividend,f,c
  1469  0018C8  5004               	movf	___lwdiv@divisor+1,w,c
  1470  0018CA  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1471  0018CC  8005               	bsf	___lwdiv@quotient,0,c
  1472  0018CE                     l656:
  1473  0018CE  90D8               	bcf	status,0,c
  1474  0018D0  3204               	rrcf	___lwdiv@divisor+1,f,c
  1475  0018D2  3203               	rrcf	___lwdiv@divisor,f,c
  1476  0018D4  2E07               	decfsz	___lwdiv@counter,f,c
  1477  0018D6  D7ED               	goto	u800
  1478  0018D8                     l657:
  1479  0018D8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1480  0018DC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1481  0018E0  0012               	return		;funcret
  1482  0018E2                     __end_of___lwdiv:
  1483                           	opt stack 0
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           prodh	equ	0xFF4
  1489                           prodl	equ	0xFF3
  1490                           intcon	equ	0xFF2
  1491                           postinc0	equ	0xFEE
  1492                           postdec1	equ	0xFE5
  1493                           fsr1l	equ	0xFE1
  1494                           indf2	equ	0xFDF
  1495                           postinc2	equ	0xFDE
  1496                           postdec2	equ	0xFDD
  1497                           fsr2h	equ	0xFDA
  1498                           fsr2l	equ	0xFD9
  1499                           status	equ	0xFD8
  1500                           
  1501 ;; *************** function _setupSerial *****************
  1502 ;; Defined at:
  1503 ;;		line 3 in file "my_ser.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  dummy           1    0[COMRAM] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;Total ram usage:        1 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_main
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text4
  1531  001ACA                     __ptext4:
  1532                           	opt stack 0
  1533  001ACA                     _setupSerial:
  1534                           	opt stack 30
  1535                           
  1536                           ;my_ser.c: 4: unsigned char dummy;
  1537                           ;my_ser.c: 5: BAUDCONbits.BRG16 = 0;
  1538                           
  1539                           ;incstack = 0
  1540  001ACA  96B8               	bcf	4024,3,c	;volatile
  1541                           
  1542                           ;my_ser.c: 6: TXSTA = 0;
  1543  001ACC  0E00               	movlw	0
  1544  001ACE  6EAC               	movwf	4012,c	;volatile
  1545                           
  1546                           ;my_ser.c: 7: SPBRG = 25;
  1547  001AD0  0E19               	movlw	25
  1548  001AD2  6EAF               	movwf	4015,c	;volatile
  1549                           
  1550                           ;my_ser.c: 8: SPBRGH = 0;
  1551  001AD4  0E00               	movlw	0
  1552  001AD6  6EB0               	movwf	4016,c	;volatile
  1553                           
  1554                           ;my_ser.c: 9: TXSTAbits.BRGH = 1;
  1555  001AD8  84AC               	bsf	4012,2,c	;volatile
  1556                           
  1557                           ;my_ser.c: 10: TXSTAbits.TXEN = 1;
  1558  001ADA  8AAC               	bsf	4012,5,c	;volatile
  1559                           
  1560                           ;my_ser.c: 12: RCSTA = 0;
  1561  001ADC  0E00               	movlw	0
  1562  001ADE  6EAB               	movwf	4011,c	;volatile
  1563                           
  1564                           ;my_ser.c: 13: RCSTAbits.CREN = 1;
  1565  001AE0  88AB               	bsf	4011,4,c	;volatile
  1566                           
  1567                           ;my_ser.c: 14: RCSTAbits.SPEN = 1;
  1568  001AE2  8EAB               	bsf	4011,7,c	;volatile
  1569                           
  1570                           ;my_ser.c: 15: ;
  1571                           ;my_ser.c: 16: dummy = RCREG;
  1572  001AE4  CFAE F001          	movff	4014,setupSerial@dummy	;volatile
  1573                           
  1574                           ;my_ser.c: 17: dummy = RCREG;
  1575  001AE8  CFAE F001          	movff	4014,setupSerial@dummy	;volatile
  1576  001AEC  0012               	return	
  1577  001AEE                     __end_of_setupSerial:
  1578                           	opt stack 0
  1579                           tblptru	equ	0xFF8
  1580                           tblptrh	equ	0xFF7
  1581                           tblptrl	equ	0xFF6
  1582                           tablat	equ	0xFF5
  1583                           prodh	equ	0xFF4
  1584                           prodl	equ	0xFF3
  1585                           intcon	equ	0xFF2
  1586                           postinc0	equ	0xFEE
  1587                           postdec1	equ	0xFE5
  1588                           fsr1l	equ	0xFE1
  1589                           indf2	equ	0xFDF
  1590                           postinc2	equ	0xFDE
  1591                           postdec2	equ	0xFDD
  1592                           fsr2h	equ	0xFDA
  1593                           fsr2l	equ	0xFD9
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _send_string_no_lib *****************
  1597 ;; Defined at:
  1598 ;;		line 47 in file "my_ser.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  p               2    1[COMRAM] PTR unsigned char 
  1601 ;;		 -> STR_7(12), main@buffer(64), 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;Total ram usage:        2 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    1
  1620 ;; This function calls:
  1621 ;;		_send_byte_no_lib
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text5
  1628  00178E                     __ptext5:
  1629                           	opt stack 0
  1630  00178E                     _send_string_no_lib:
  1631                           	opt stack 29
  1632                           
  1633                           ;my_ser.c: 48: while (*p) {
  1634                           
  1635                           ;incstack = 0
  1636  00178E  D015               	goto	l124
  1637  001790                     
  1638                           ;my_ser.c: 49: send_byte_no_lib(*p);
  1639  001790  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
  1640  001794  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  1641  001798  0E00               	movlw	low (__smallconst shr (0+16))
  1642  00179A  6EF8               	movwf	tblptru,c
  1643  00179C  0E0F               	movlw	(high __ramtop+-1)
  1644  00179E  64F7               	cpfsgt	tblptrh,c
  1645  0017A0  D003               	bra	u967
  1646  0017A2  0008               	tblrd		*
  1647  0017A4  50F5               	movf	tablat,w,c
  1648  0017A6  D005               	bra	u960
  1649  0017A8                     u967:
  1650  0017A8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1651  0017AC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1652  0017B0  50EF               	movf	indf0,w,c
  1653  0017B2                     u960:
  1654  0017B2  EC94  F00D         	call	_send_byte_no_lib
  1655                           
  1656                           ;my_ser.c: 50: p++;
  1657  0017B6  4A02               	infsnz	send_string_no_lib@p,f,c
  1658  0017B8  2A03               	incf	send_string_no_lib@p+1,f,c
  1659  0017BA                     l124:
  1660  0017BA  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
  1661  0017BE  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  1662  0017C2  0E00               	movlw	low (__smallconst shr (0+16))
  1663  0017C4  6EF8               	movwf	tblptru,c
  1664  0017C6  0E0F               	movlw	(high __ramtop+-1)
  1665  0017C8  64F7               	cpfsgt	tblptrh,c
  1666  0017CA  D003               	bra	u977
  1667  0017CC  0008               	tblrd		*
  1668  0017CE  50F5               	movf	tablat,w,c
  1669  0017D0  D005               	bra	u970
  1670  0017D2                     u977:
  1671  0017D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1672  0017D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1673  0017DA  50EF               	movf	indf0,w,c
  1674  0017DC                     u970:
  1675  0017DC  0900               	iorlw	0
  1676  0017DE  B4D8               	btfsc	status,2,c
  1677  0017E0  0012               	return	
  1678  0017E2  D7D6               	goto	l125
  1679  0017E4                     __end_of_send_string_no_lib:
  1680                           	opt stack 0
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           prodh	equ	0xFF4
  1686                           prodl	equ	0xFF3
  1687                           intcon	equ	0xFF2
  1688                           indf0	equ	0xFEF
  1689                           postinc0	equ	0xFEE
  1690                           fsr0h	equ	0xFEA
  1691                           fsr0l	equ	0xFE9
  1692                           postdec1	equ	0xFE5
  1693                           fsr1l	equ	0xFE1
  1694                           indf2	equ	0xFDF
  1695                           postinc2	equ	0xFDE
  1696                           postdec2	equ	0xFDD
  1697                           fsr2h	equ	0xFDA
  1698                           fsr2l	equ	0xFD9
  1699                           status	equ	0xFD8
  1700                           
  1701 ;; *************** function _send_byte_no_lib *****************
  1702 ;; Defined at:
  1703 ;;		line 39 in file "my_ser.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  c               1    wreg     unsigned char 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  c               1    0[COMRAM] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;Total ram usage:        1 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_send_string_no_lib
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text6
  1731  001B28                     __ptext6:
  1732                           	opt stack 0
  1733  001B28                     _send_byte_no_lib:
  1734                           	opt stack 29
  1735                           
  1736                           ;incstack = 0
  1737                           ;send_byte_no_lib@c stored from wreg
  1738  001B28  6E01               	movwf	send_byte_no_lib@c,c
  1739                           
  1740                           ;my_ser.c: 40: while (!TXSTAbits.TRMT)
  1741  001B2A  D001               	goto	l118
  1742  001B2C                     l119:
  1743  001B2C  0004               	clrwdt		;# 
  1744  001B2E                     l118:
  1745  001B2E  A2AC               	btfss	4012,1,c	;volatile
  1746  001B30  D7FD               	goto	l119
  1747                           
  1748                           ;my_ser.c: 43: }
  1749                           ;my_ser.c: 44: TXREG = c;
  1750  001B32  C001  FFAD         	movff	send_byte_no_lib@c,4013	;volatile
  1751  001B36  0012               	return		;funcret
  1752  001B38                     __end_of_send_byte_no_lib:
  1753                           	opt stack 0
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           prodh	equ	0xFF4
  1759                           prodl	equ	0xFF3
  1760                           intcon	equ	0xFF2
  1761                           indf0	equ	0xFEF
  1762                           postinc0	equ	0xFEE
  1763                           fsr0h	equ	0xFEA
  1764                           fsr0l	equ	0xFE9
  1765                           postdec1	equ	0xFE5
  1766                           fsr1l	equ	0xFE1
  1767                           indf2	equ	0xFDF
  1768                           postinc2	equ	0xFDE
  1769                           postdec2	equ	0xFDD
  1770                           fsr2h	equ	0xFDA
  1771                           fsr2l	equ	0xFD9
  1772                           status	equ	0xFD8
  1773                           
  1774 ;; *************** function _read_byte_no_lib *****************
  1775 ;; Defined at:
  1776 ;;		line 33 in file "my_ser.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  c               1    0[COMRAM] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      unsigned char 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;Total ram usage:        1 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text7
  1804  001B44                     __ptext7:
  1805                           	opt stack 0
  1806  001B44                     _read_byte_no_lib:
  1807                           	opt stack 30
  1808                           
  1809                           ;my_ser.c: 34: unsigned char c;
  1810                           ;my_ser.c: 35: c = RCREG;
  1811                           
  1812                           ;incstack = 0
  1813  001B44  CFAE F001          	movff	4014,read_byte_no_lib@c	;volatile
  1814                           
  1815                           ;my_ser.c: 36: return c;
  1816  001B48  5001               	movf	read_byte_no_lib@c,w,c
  1817  001B4A  0012               	return	
  1818  001B4C                     __end_of_read_byte_no_lib:
  1819                           	opt stack 0
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           prodh	equ	0xFF4
  1825                           prodl	equ	0xFF3
  1826                           intcon	equ	0xFF2
  1827                           indf0	equ	0xFEF
  1828                           postinc0	equ	0xFEE
  1829                           fsr0h	equ	0xFEA
  1830                           fsr0l	equ	0xFE9
  1831                           postdec1	equ	0xFE5
  1832                           fsr1l	equ	0xFE1
  1833                           indf2	equ	0xFDF
  1834                           postinc2	equ	0xFDE
  1835                           postdec2	equ	0xFDD
  1836                           fsr2h	equ	0xFDA
  1837                           fsr2l	equ	0xFD9
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _read_adc_raw_no_lib *****************
  1841 ;; Defined at:
  1842 ;;		line 32 in file "my_adc.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  channel         1    wreg     unsigned char 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  channel         1    6[COMRAM] unsigned char 
  1847 ;;  raw_value       2    4[COMRAM] int 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  2    0[COMRAM] int 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        7 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;;		_read_adc_voltage
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text8
  1872  0019AE                     __ptext8:
  1873                           	opt stack 0
  1874  0019AE                     _read_adc_raw_no_lib:
  1875                           	opt stack 30
  1876                           
  1877                           ;incstack = 0
  1878                           ;read_adc_raw_no_lib@channel stored from wreg
  1879  0019AE  6E07               	movwf	read_adc_raw_no_lib@channel,c
  1880                           
  1881                           ;my_adc.c: 33: int raw_value;
  1882                           ;my_adc.c: 34: ADCON0bits.CHS = channel;
  1883  0019B0  C007  F003         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  1884  0019B4  4603               	rlncf	??_read_adc_raw_no_lib,f,c
  1885  0019B6  4603               	rlncf	??_read_adc_raw_no_lib,f,c
  1886  0019B8  50C2               	movf	4034,w,c	;volatile
  1887  0019BA  1803               	xorwf	??_read_adc_raw_no_lib,w,c
  1888  0019BC  0BC3               	andlw	-61
  1889  0019BE  1803               	xorwf	??_read_adc_raw_no_lib,w,c
  1890  0019C0  6EC2               	movwf	4034,c	;volatile
  1891                           
  1892                           ;my_adc.c: 37: ADCON0bits.GO = 1;
  1893  0019C2  82C2               	bsf	4034,1,c	;volatile
  1894  0019C4  B2C2               	btfsc	4034,1,c	;volatile
  1895  0019C6  D7FE               	goto	l76
  1896                           
  1897                           ;my_adc.c: 41: raw_value = ADRESH << 8 | ADRESL;
  1898  0019C8  50C3               	movf	4035,w,c	;volatile
  1899  0019CA  CFC4 F003          	movff	4036,??_read_adc_raw_no_lib	;volatile
  1900  0019CE  6A04               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),c
  1901  0019D0  C003  F004         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  1902  0019D4  6A03               	clrf	??_read_adc_raw_no_lib,c
  1903  0019D6  1003               	iorwf	??_read_adc_raw_no_lib,w,c
  1904  0019D8  6E05               	movwf	read_adc_raw_no_lib@raw_value,c
  1905  0019DA  5004               	movf	??_read_adc_raw_no_lib+1,w,c
  1906  0019DC  6E06               	movwf	read_adc_raw_no_lib@raw_value+1,c
  1907                           
  1908                           ;my_adc.c: 45: return raw_value;
  1909  0019DE  C005  F001         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  1910  0019E2  C006  F002         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  1911  0019E6  0012               	return	
  1912  0019E8                     __end_of_read_adc_raw_no_lib:
  1913                           	opt stack 0
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           prodh	equ	0xFF4
  1919                           prodl	equ	0xFF3
  1920                           intcon	equ	0xFF2
  1921                           indf0	equ	0xFEF
  1922                           postinc0	equ	0xFEE
  1923                           fsr0h	equ	0xFEA
  1924                           fsr0l	equ	0xFE9
  1925                           postdec1	equ	0xFE5
  1926                           fsr1l	equ	0xFE1
  1927                           indf2	equ	0xFDF
  1928                           postinc2	equ	0xFDE
  1929                           postdec2	equ	0xFDD
  1930                           fsr2h	equ	0xFDA
  1931                           fsr2l	equ	0xFD9
  1932                           status	equ	0xFD8
  1933                           
  1934 ;; *************** function _lcd_puts *****************
  1935 ;; Defined at:
  1936 ;;		line 114 in file "lcd_x8.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  s               2   14[COMRAM] PTR unsigned char 
  1939 ;;		 -> STR_3(15), main@buffer(64), STR_1(15), 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        2 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    5
  1958 ;; This function calls:
  1959 ;;		_lcd_putc
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text9
  1966  0017E4                     __ptext9:
  1967                           	opt stack 0
  1968  0017E4                     _lcd_puts:
  1969                           	opt stack 25
  1970                           
  1971                           ;lcd_x8.c: 115: while (*s) {
  1972                           
  1973                           ;incstack = 0
  1974  0017E4  D015               	goto	l50
  1975  0017E6                     
  1976                           ;lcd_x8.c: 116: lcd_putc(*s);
  1977  0017E6  C00F  FFF6         	movff	lcd_puts@s,tblptrl
  1978  0017EA  C010  FFF7         	movff	lcd_puts@s+1,tblptrh
  1979  0017EE  0E00               	movlw	low (__smallconst shr (0+16))
  1980  0017F0  6EF8               	movwf	tblptru,c
  1981  0017F2  0E0F               	movlw	(high __ramtop+-1)
  1982  0017F4  64F7               	cpfsgt	tblptrh,c
  1983  0017F6  D003               	bra	u897
  1984  0017F8  0008               	tblrd		*
  1985  0017FA  50F5               	movf	tablat,w,c
  1986  0017FC  D005               	bra	u890
  1987  0017FE                     u897:
  1988  0017FE  CFF6 FFE9          	movff	tblptrl,fsr0l
  1989  001802  CFF7 FFEA          	movff	tblptrh,fsr0h
  1990  001806  50EF               	movf	indf0,w,c
  1991  001808                     u890:
  1992  001808  EC1D  F00C         	call	_lcd_putc
  1993                           
  1994                           ;lcd_x8.c: 117: s++;
  1995  00180C  4A0F               	infsnz	lcd_puts@s,f,c
  1996  00180E  2A10               	incf	lcd_puts@s+1,f,c
  1997  001810                     l50:
  1998  001810  C00F  FFF6         	movff	lcd_puts@s,tblptrl
  1999  001814  C010  FFF7         	movff	lcd_puts@s+1,tblptrh
  2000  001818  0E00               	movlw	low (__smallconst shr (0+16))
  2001  00181A  6EF8               	movwf	tblptru,c
  2002  00181C  0E0F               	movlw	(high __ramtop+-1)
  2003  00181E  64F7               	cpfsgt	tblptrh,c
  2004  001820  D003               	bra	u907
  2005  001822  0008               	tblrd		*
  2006  001824  50F5               	movf	tablat,w,c
  2007  001826  D005               	bra	u900
  2008  001828                     u907:
  2009  001828  CFF6 FFE9          	movff	tblptrl,fsr0l
  2010  00182C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2011  001830  50EF               	movf	indf0,w,c
  2012  001832                     u900:
  2013  001832  0900               	iorlw	0
  2014  001834  B4D8               	btfsc	status,2,c
  2015  001836  0012               	return	
  2016  001838  D7D6               	goto	l51
  2017  00183A                     __end_of_lcd_puts:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           prodh	equ	0xFF4
  2024                           prodl	equ	0xFF3
  2025                           intcon	equ	0xFF2
  2026                           indf0	equ	0xFEF
  2027                           postinc0	equ	0xFEE
  2028                           fsr0h	equ	0xFEA
  2029                           fsr0l	equ	0xFE9
  2030                           postdec1	equ	0xFE5
  2031                           fsr1l	equ	0xFE1
  2032                           indf2	equ	0xFDF
  2033                           postinc2	equ	0xFDE
  2034                           postdec2	equ	0xFDD
  2035                           fsr2h	equ	0xFDA
  2036                           fsr2l	equ	0xFD9
  2037                           status	equ	0xFD8
  2038                           
  2039 ;; *************** function _lcd_putc *****************
  2040 ;; Defined at:
  2041 ;;		line 100 in file "lcd_x8.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  c               1    wreg     unsigned char 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  c               1   13[COMRAM] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;Total ram usage:        1 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:    4
  2062 ;; This function calls:
  2063 ;;		_delay_ms
  2064 ;;		_lcd_gotoxy
  2065 ;;		_lcd_send_byte
  2066 ;; This function is called by:
  2067 ;;		_lcd_puts
  2068 ;;		_main
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text10
  2073  00183A                     __ptext10:
  2074                           	opt stack 0
  2075  00183A                     _lcd_putc:
  2076                           	opt stack 25
  2077                           
  2078                           ;incstack = 0
  2079                           ;lcd_putc@c stored from wreg
  2080  00183A  6E0E               	movwf	lcd_putc@c,c
  2081                           
  2082                           ;lcd_x8.c: 101: switch (c) {
  2083  00183C  D01E               	goto	l41
  2084  00183E  0E01               	movlw	1
  2085  001840  6E09               	movwf	lcd_send_byte@n,c
  2086  001842  0E00               	movlw	0
  2087  001844  EC71  F00C         	call	_lcd_send_byte
  2088                           
  2089                           ;lcd_x8.c: 103: delay_ms(2);
  2090  001848  0E00               	movlw	0
  2091  00184A  6E02               	movwf	delay_ms@n+1,c
  2092  00184C  0E02               	movlw	2
  2093  00184E  6E01               	movwf	delay_ms@n,c
  2094  001850  EC51  F00D         	call	_delay_ms	;wreg free
  2095                           
  2096                           ;lcd_x8.c: 104: break;
  2097  001854  0012               	return	
  2098  001856  0E02               	movlw	2
  2099  001858  6E0B               	movwf	lcd_gotoxy@y,c
  2100  00185A  0E01               	movlw	1
  2101  00185C  ECB6  F00C         	call	_lcd_gotoxy
  2102                           
  2103                           ;lcd_x8.c: 106: break;
  2104  001860  0012               	return	
  2105  001862  0E10               	movlw	16
  2106  001864  6E09               	movwf	lcd_send_byte@n,c
  2107  001866  0E00               	movlw	0
  2108  001868  EC71  F00C         	call	_lcd_send_byte
  2109                           
  2110                           ;lcd_x8.c: 108: break;
  2111  00186C  0012               	return	
  2112  00186E  C00E  F009         	movff	lcd_putc@c,lcd_send_byte@n
  2113  001872  0E01               	movlw	1
  2114  001874  EC71  F00C         	call	_lcd_send_byte
  2115                           
  2116                           ;lcd_x8.c: 111: }
  2117                           
  2118                           ;lcd_x8.c: 110: break;
  2119  001878  0012               	return	
  2120  00187A                     l41:
  2121  00187A  500E               	movf	lcd_putc@c,w,c
  2122                           
  2123                           ; Switch size 1, requested type "space"
  2124                           ; Number of cases is 3, Range of values is 8 to 12
  2125                           ; switch strategies available:
  2126                           ; Name         Instructions Cycles
  2127                           ; simple_byte           10     6 (average)
  2128                           ;	Chosen strategy is simple_byte
  2129  00187C  0A08               	xorlw	8	; case 8
  2130  00187E  B4D8               	btfsc	status,2,c
  2131  001880  D7F0               	goto	l45
  2132  001882  0A02               	xorlw	2	; case 10
  2133  001884  B4D8               	btfsc	status,2,c
  2134  001886  D7E7               	goto	l44
  2135  001888  0A06               	xorlw	6	; case 12
  2136  00188A  B4D8               	btfsc	status,2,c
  2137  00188C  D7D8               	goto	l42
  2138  00188E  D7EF               	goto	l46
  2139  001890                     __end_of_lcd_putc:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           prodh	equ	0xFF4
  2146                           prodl	equ	0xFF3
  2147                           intcon	equ	0xFF2
  2148                           indf0	equ	0xFEF
  2149                           postinc0	equ	0xFEE
  2150                           fsr0h	equ	0xFEA
  2151                           fsr0l	equ	0xFE9
  2152                           postdec1	equ	0xFE5
  2153                           fsr1l	equ	0xFE1
  2154                           indf2	equ	0xFDF
  2155                           postinc2	equ	0xFDE
  2156                           postdec2	equ	0xFDD
  2157                           fsr2h	equ	0xFDA
  2158                           fsr2l	equ	0xFD9
  2159                           status	equ	0xFD8
  2160                           
  2161 ;; *************** function _lcd_gotoxy *****************
  2162 ;; Defined at:
  2163 ;;		line 83 in file "lcd_x8.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  x               1    wreg     unsigned char 
  2166 ;;  y               1   10[COMRAM] unsigned char 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  x               1   11[COMRAM] unsigned char 
  2169 ;;  address         1   12[COMRAM] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2179 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;Total ram usage:        3 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    3
  2186 ;; This function calls:
  2187 ;;		_lcd_send_byte
  2188 ;; This function is called by:
  2189 ;;		_lcd_putc
  2190 ;;		_main
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text11
  2195  00196C                     __ptext11:
  2196                           	opt stack 0
  2197  00196C                     _lcd_gotoxy:
  2198                           	opt stack 25
  2199                           
  2200                           ;incstack = 0
  2201                           ;lcd_gotoxy@x stored from wreg
  2202  00196C  6E0C               	movwf	lcd_gotoxy@x,c
  2203                           
  2204                           ;lcd_x8.c: 84: unsigned char address;
  2205                           ;lcd_x8.c: 86: switch (y) {
  2206  00196E  D009               	goto	l32
  2207  001970  0E80               	movlw	128
  2208  001972  D005               	goto	L5
  2209  001974  0EC0               	movlw	192
  2210  001976  D003               	goto	L5
  2211  001978  0E90               	movlw	144
  2212  00197A  D001               	goto	L5
  2213  00197C  0ED0               	movlw	208
  2214  00197E                     L5:
  2215  00197E  6E0D               	movwf	lcd_gotoxy@address,c
  2216                           
  2217                           ;lcd_x8.c: 95: }
  2218                           
  2219                           ;lcd_x8.c: 94: break;
  2220  001980  D00D               	goto	l34
  2221  001982                     l32:
  2222  001982  500B               	movf	lcd_gotoxy@y,w,c
  2223                           
  2224                           ; Switch size 1, requested type "space"
  2225                           ; Number of cases is 4, Range of values is 1 to 4
  2226                           ; switch strategies available:
  2227                           ; Name         Instructions Cycles
  2228                           ; simple_byte           13     7 (average)
  2229                           ;	Chosen strategy is simple_byte
  2230  001984  0A01               	xorlw	1	; case 1
  2231  001986  B4D8               	btfsc	status,2,c
  2232  001988  D7F3               	goto	l33
  2233  00198A  0A03               	xorlw	3	; case 2
  2234  00198C  B4D8               	btfsc	status,2,c
  2235  00198E  D7F2               	goto	l35
  2236  001990  0A01               	xorlw	1	; case 3
  2237  001992  B4D8               	btfsc	status,2,c
  2238  001994  D7F1               	goto	l36
  2239  001996  0A07               	xorlw	7	; case 4
  2240  001998  B4D8               	btfsc	status,2,c
  2241  00199A  D7F0               	goto	l37
  2242  00199C                     l34:
  2243                           
  2244                           ;lcd_x8.c: 96: address += x - 1;
  2245  00199C  040C               	decf	lcd_gotoxy@x,w,c
  2246  00199E  260D               	addwf	lcd_gotoxy@address,f,c
  2247                           
  2248                           ;lcd_x8.c: 97: lcd_send_byte(0, (unsigned char) (0x80 | address));
  2249  0019A0  500D               	movf	lcd_gotoxy@address,w,c
  2250  0019A2  0980               	iorlw	128
  2251  0019A4  6E09               	movwf	lcd_send_byte@n,c
  2252  0019A6  0E00               	movlw	0
  2253  0019A8  EC71  F00C         	call	_lcd_send_byte
  2254  0019AC  0012               	return		;funcret
  2255  0019AE                     __end_of_lcd_gotoxy:
  2256                           	opt stack 0
  2257                           tblptru	equ	0xFF8
  2258                           tblptrh	equ	0xFF7
  2259                           tblptrl	equ	0xFF6
  2260                           tablat	equ	0xFF5
  2261                           prodh	equ	0xFF4
  2262                           prodl	equ	0xFF3
  2263                           intcon	equ	0xFF2
  2264                           indf0	equ	0xFEF
  2265                           postinc0	equ	0xFEE
  2266                           fsr0h	equ	0xFEA
  2267                           fsr0l	equ	0xFE9
  2268                           postdec1	equ	0xFE5
  2269                           fsr1l	equ	0xFE1
  2270                           indf2	equ	0xFDF
  2271                           postinc2	equ	0xFDE
  2272                           postdec2	equ	0xFDD
  2273                           fsr2h	equ	0xFDA
  2274                           fsr2l	equ	0xFD9
  2275                           status	equ	0xFD8
  2276                           
  2277 ;; *************** function _lcd_init *****************
  2278 ;; Defined at:
  2279 ;;		line 50 in file "lcd_x8.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  i               1   10[COMRAM] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;Total ram usage:        1 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    3
  2300 ;; This function calls:
  2301 ;;		_delay_ms
  2302 ;;		_lcd_send_byte
  2303 ;;		_lcd_send_nibble
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text12
  2310  00172C                     __ptext12:
  2311                           	opt stack 0
  2312  00172C                     _lcd_init:
  2313                           	opt stack 27
  2314                           
  2315                           ;lcd_x8.c: 52: unsigned char i;
  2316                           ;lcd_x8.c: 55: lcd.rs =0;
  2317                           
  2318                           ;incstack = 0
  2319  00172C  9283               	bcf	3971,1,c
  2320                           
  2321                           ;lcd_x8.c: 57: lcd.enable =0;
  2322  00172E  9683               	bcf	3971,3,c
  2323                           
  2324                           ;lcd_x8.c: 59: delay_ms(25);
  2325  001730  0E00               	movlw	0
  2326  001732  6E02               	movwf	delay_ms@n+1,c
  2327  001734  0E19               	movlw	25
  2328  001736  6E01               	movwf	delay_ms@n,c
  2329  001738  EC51  F00D         	call	_delay_ms	;wreg free
  2330                           
  2331                           ;lcd_x8.c: 60: for (i = 1; i <= 3; ++i) {
  2332  00173C  0E01               	movlw	1
  2333  00173E  6E0B               	movwf	lcd_init@i,c
  2334  001740                     l1604:
  2335  001740  0E03               	movlw	3
  2336  001742  640B               	cpfsgt	lcd_init@i,c
  2337  001744  D001               	goto	l25
  2338  001746  D00B               	goto	u860
  2339  001748                     l25:
  2340                           
  2341                           ;lcd_x8.c: 61: lcd_send_nibble(3);
  2342  001748  0E03               	movlw	3
  2343  00174A  EC77  F00D         	call	_lcd_send_nibble
  2344                           
  2345                           ;lcd_x8.c: 63: delay_ms(6);
  2346  00174E  0E00               	movlw	0
  2347  001750  6E02               	movwf	delay_ms@n+1,c
  2348  001752  0E06               	movlw	6
  2349  001754  6E01               	movwf	delay_ms@n,c
  2350  001756  EC51  F00D         	call	_delay_ms	;wreg free
  2351  00175A  2A0B               	incf	lcd_init@i,f,c
  2352  00175C  D7F1               	goto	l1604
  2353  00175E                     u860:
  2354                           
  2355                           ;lcd_x8.c: 64: }
  2356                           ;lcd_x8.c: 66: lcd_send_nibble(2);
  2357  00175E  0E02               	movlw	2
  2358  001760  EC77  F00D         	call	_lcd_send_nibble
  2359                           
  2360                           ;lcd_x8.c: 68: for (i = 0; i <= 3; ++i)
  2361  001764  0E00               	movlw	0
  2362  001766  6E0B               	movwf	lcd_init@i,c
  2363  001768                     l1618:
  2364  001768  0E03               	movlw	3
  2365  00176A  640B               	cpfsgt	lcd_init@i,c
  2366  00176C  D001               	goto	l27
  2367  00176E  0012               	return	
  2368  001770                     l27:
  2369                           
  2370                           ;lcd_x8.c: 69: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2371  001770  500B               	movf	lcd_init@i,w,c
  2372  001772  0D01               	mullw	1
  2373  001774  0E7A               	movlw	low _LCD_INIT_STRING
  2374  001776  24F3               	addwf	prodl,w,c
  2375  001778  6ED9               	movwf	fsr2l,c
  2376  00177A  0E00               	movlw	high _LCD_INIT_STRING
  2377  00177C  20F4               	addwfc	prodh,w,c
  2378  00177E  6EDA               	movwf	fsr2h,c
  2379  001780  50DF               	movf	indf2,w,c
  2380  001782  6E09               	movwf	lcd_send_byte@n,c
  2381  001784  0E00               	movlw	0
  2382  001786  EC71  F00C         	call	_lcd_send_byte
  2383  00178A  2A0B               	incf	lcd_init@i,f,c
  2384  00178C  D7ED               	goto	l1618
  2385  00178E                     __end_of_lcd_init:
  2386                           	opt stack 0
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           prodh	equ	0xFF4
  2392                           prodl	equ	0xFF3
  2393                           intcon	equ	0xFF2
  2394                           indf0	equ	0xFEF
  2395                           postinc0	equ	0xFEE
  2396                           fsr0h	equ	0xFEA
  2397                           fsr0l	equ	0xFE9
  2398                           postdec1	equ	0xFE5
  2399                           fsr1l	equ	0xFE1
  2400                           indf2	equ	0xFDF
  2401                           postinc2	equ	0xFDE
  2402                           postdec2	equ	0xFDD
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _lcd_send_byte *****************
  2408 ;; Defined at:
  2409 ;;		line 33 in file "lcd_x8.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  cm_data         1    wreg     unsigned char 
  2412 ;;  n               1    8[COMRAM] unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  cm_data         1    9[COMRAM] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2424 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;Total ram usage:        2 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    2
  2431 ;; This function calls:
  2432 ;;		_delay_cycles
  2433 ;;		_delay_ms
  2434 ;;		_lcd_send_nibble
  2435 ;; This function is called by:
  2436 ;;		_lcd_init
  2437 ;;		_lcd_gotoxy
  2438 ;;		_lcd_putc
  2439 ;;		_Lcd_Shift_Right
  2440 ;;		_Lcd_Shift_Left
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text13
  2445  0018E2                     __ptext13:
  2446                           	opt stack 0
  2447  0018E2                     _lcd_send_byte:
  2448                           	opt stack 26
  2449                           
  2450                           ;incstack = 0
  2451                           ;lcd_send_byte@cm_data stored from wreg
  2452  0018E2  6E0A               	movwf	lcd_send_byte@cm_data,c
  2453                           
  2454                           ;lcd_x8.c: 37: lcd.rs =cm_data;
  2455  0018E4  B00A               	btfsc	lcd_send_byte@cm_data,0,c
  2456  0018E6  D002               	bra	u685
  2457  0018E8  9283               	bcf	3971,1,c
  2458  0018EA  D001               	bra	u686
  2459  0018EC                     u685:
  2460  0018EC  8283               	bsf	3971,1,c
  2461  0018EE                     u686:
  2462                           
  2463                           ;lcd_x8.c: 38: delay_cycles(1);
  2464  0018EE  0E01               	movlw	1
  2465  0018F0  EC10  F00D         	call	_delay_cycles
  2466                           
  2467                           ;lcd_x8.c: 40: delay_cycles(1);
  2468  0018F4  0E01               	movlw	1
  2469  0018F6  EC10  F00D         	call	_delay_cycles
  2470                           
  2471                           ;lcd_x8.c: 41: lcd.enable =0;
  2472  0018FA  9683               	bcf	3971,3,c
  2473                           
  2474                           ;lcd_x8.c: 42: lcd_send_nibble(n >> 4);
  2475  0018FC  3809               	swapf	lcd_send_byte@n,w,c
  2476  0018FE  0B0F               	andlw	15
  2477  001900  EC77  F00D         	call	_lcd_send_nibble
  2478                           
  2479                           ;lcd_x8.c: 43: lcd_send_nibble(n & 0x0f);
  2480  001904  5009               	movf	lcd_send_byte@n,w,c
  2481  001906  0B0F               	andlw	15
  2482  001908  EC77  F00D         	call	_lcd_send_nibble
  2483                           
  2484                           ;lcd_x8.c: 44: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
  2485  00190C  500A               	movf	lcd_send_byte@cm_data,w,c
  2486  00190E  B4D8               	btfsc	status,2,c
  2487  001910  D005               	goto	l20
  2488  001912  0E32               	movlw	50
  2489  001914                     u1317:
  2490  001914  0004               	clrwdt	
  2491  001916  2EE8               	decfsz	wreg,f,c
  2492  001918  D7FD               	bra	u1317
  2493  00191A  0012               	return	
  2494  00191C                     l20:
  2495                           
  2496                           ;lcd_x8.c: 45: else
  2497                           ;lcd_x8.c: 46: delay_ms(2);
  2498  00191C  0E00               	movlw	0
  2499  00191E  6E02               	movwf	delay_ms@n+1,c
  2500  001920  0E02               	movlw	2
  2501  001922  6E01               	movwf	delay_ms@n,c
  2502  001924  EC51  F00D         	call	_delay_ms	;wreg free
  2503  001928  0012               	return	
  2504  00192A                     __end_of_lcd_send_byte:
  2505                           	opt stack 0
  2506                           tblptru	equ	0xFF8
  2507                           tblptrh	equ	0xFF7
  2508                           tblptrl	equ	0xFF6
  2509                           tablat	equ	0xFF5
  2510                           prodh	equ	0xFF4
  2511                           prodl	equ	0xFF3
  2512                           intcon	equ	0xFF2
  2513                           indf0	equ	0xFEF
  2514                           postinc0	equ	0xFEE
  2515                           fsr0h	equ	0xFEA
  2516                           fsr0l	equ	0xFE9
  2517                           wreg	equ	0xFE8
  2518                           postdec1	equ	0xFE5
  2519                           fsr1l	equ	0xFE1
  2520                           indf2	equ	0xFDF
  2521                           postinc2	equ	0xFDE
  2522                           postdec2	equ	0xFDD
  2523                           fsr2h	equ	0xFDA
  2524                           fsr2l	equ	0xFD9
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _lcd_send_nibble *****************
  2528 ;; Defined at:
  2529 ;;		line 23 in file "lcd_x8.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  n               1    wreg     unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  n               1    7[COMRAM] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;Total ram usage:        2 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    1
  2550 ;; This function calls:
  2551 ;;		_delay_cycles
  2552 ;; This function is called by:
  2553 ;;		_lcd_send_byte
  2554 ;;		_lcd_init
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text14
  2559  001AEE                     __ptext14:
  2560                           	opt stack 0
  2561  001AEE                     _lcd_send_nibble:
  2562                           	opt stack 26
  2563                           
  2564                           ;incstack = 0
  2565                           ;lcd_send_nibble@n stored from wreg
  2566  001AEE  6E08               	movwf	lcd_send_nibble@n,c
  2567                           
  2568                           ;lcd_x8.c: 25: lcd.data = n;
  2569  001AF0  C008  F007         	movff	lcd_send_nibble@n,??_lcd_send_nibble
  2570  001AF4  3A07               	swapf	??_lcd_send_nibble,f,c
  2571  001AF6  5083               	movf	3971,w,c
  2572  001AF8  1807               	xorwf	??_lcd_send_nibble,w,c
  2573  001AFA  0B0F               	andlw	-241
  2574  001AFC  1807               	xorwf	??_lcd_send_nibble,w,c
  2575  001AFE  6E83               	movwf	3971,c
  2576                           
  2577                           ;lcd_x8.c: 27: delay_cycles(1);
  2578  001B00  0E01               	movlw	1
  2579  001B02  EC10  F00D         	call	_delay_cycles
  2580                           
  2581                           ;lcd_x8.c: 28: lcd.enable =1;
  2582  001B06  8683               	bsf	3971,3,c
  2583                           
  2584                           ;lcd_x8.c: 29: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
  2585  001B08  0004               	clrwdt	
  2586  001B0A  F000               	nop		;2 cycle nop
  2587                           
  2588                           ;lcd_x8.c: 30: lcd.enable =0;
  2589  001B0C  9683               	bcf	3971,3,c
  2590  001B0E  0012               	return		;funcret
  2591  001B10                     __end_of_lcd_send_nibble:
  2592                           	opt stack 0
  2593                           tblptru	equ	0xFF8
  2594                           tblptrh	equ	0xFF7
  2595                           tblptrl	equ	0xFF6
  2596                           tablat	equ	0xFF5
  2597                           prodh	equ	0xFF4
  2598                           prodl	equ	0xFF3
  2599                           intcon	equ	0xFF2
  2600                           indf0	equ	0xFEF
  2601                           postinc0	equ	0xFEE
  2602                           fsr0h	equ	0xFEA
  2603                           fsr0l	equ	0xFE9
  2604                           wreg	equ	0xFE8
  2605                           postdec1	equ	0xFE5
  2606                           fsr1l	equ	0xFE1
  2607                           indf2	equ	0xFDF
  2608                           postinc2	equ	0xFDE
  2609                           postdec2	equ	0xFDD
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8
  2613                           
  2614 ;; *************** function _delay_cycles *****************
  2615 ;; Defined at:
  2616 ;;		line 14 in file "lcd_x8.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  n               1    wreg     unsigned char 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  n               1    3[COMRAM] unsigned char 
  2621 ;;  x               2    4[COMRAM] int 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;Total ram usage:        6 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_lcd_send_nibble
  2641 ;;		_lcd_send_byte
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text15
  2646  001A20                     __ptext15:
  2647                           	opt stack 0
  2648  001A20                     _delay_cycles:
  2649                           	opt stack 26
  2650                           
  2651                           ;incstack = 0
  2652                           ;delay_cycles@n stored from wreg
  2653  001A20  6E04               	movwf	delay_cycles@n,c
  2654                           
  2655                           ;lcd_x8.c: 15: int x;
  2656                           ;lcd_x8.c: 16: for (x = 0; x <= n; x++) {
  2657  001A22  0E00               	movlw	0
  2658  001A24  6E06               	movwf	delay_cycles@x+1,c
  2659  001A26  0E00               	movlw	0
  2660  001A28  6E05               	movwf	delay_cycles@x,c
  2661  001A2A  D003               	goto	l11
  2662  001A2C                     l12:
  2663  001A2C  0004               	clrwdt		;# 
  2664  001A2E  4A05               	infsnz	delay_cycles@x,f,c
  2665  001A30  2A06               	incf	delay_cycles@x+1,f,c
  2666  001A32                     l11:
  2667  001A32  5004               	movf	delay_cycles@n,w,c
  2668  001A34  6E01               	movwf	??_delay_cycles& (0+255),c
  2669  001A36  6A02               	clrf	(??_delay_cycles+1)& (0+255),c
  2670  001A38  5005               	movf	delay_cycles@x,w,c
  2671  001A3A  5C01               	subwf	??_delay_cycles,w,c
  2672  001A3C  5002               	movf	??_delay_cycles+1,w,c
  2673  001A3E  0A80               	xorlw	128
  2674  001A40  6E03               	movwf	(??_delay_cycles+2)& (0+255),c
  2675  001A42  5006               	movf	delay_cycles@x+1,w,c
  2676  001A44  0A80               	xorlw	128
  2677  001A46  5803               	subwfb	(??_delay_cycles+2)& (0+255),w,c
  2678  001A48  A0D8               	btfss	status,0,c
  2679  001A4A  0012               	return	
  2680  001A4C  D7EF               	goto	l12
  2681  001A4E                     __end_of_delay_cycles:
  2682                           	opt stack 0
  2683                           tblptru	equ	0xFF8
  2684                           tblptrh	equ	0xFF7
  2685                           tblptrl	equ	0xFF6
  2686                           tablat	equ	0xFF5
  2687                           prodh	equ	0xFF4
  2688                           prodl	equ	0xFF3
  2689                           intcon	equ	0xFF2
  2690                           indf0	equ	0xFEF
  2691                           postinc0	equ	0xFEE
  2692                           fsr0h	equ	0xFEA
  2693                           fsr0l	equ	0xFE9
  2694                           wreg	equ	0xFE8
  2695                           postdec1	equ	0xFE5
  2696                           fsr1l	equ	0xFE1
  2697                           indf2	equ	0xFDF
  2698                           postinc2	equ	0xFDE
  2699                           postdec2	equ	0xFDD
  2700                           fsr2h	equ	0xFDA
  2701                           fsr2l	equ	0xFD9
  2702                           status	equ	0xFD8
  2703                           
  2704 ;; *************** function _delay_ms *****************
  2705 ;; Defined at:
  2706 ;;		line 189 in file "project.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  n               2    0[COMRAM] unsigned int 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  i               2    2[COMRAM] unsigned int 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;Total ram usage:        4 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; This function calls:
  2727 ;;		Nothing
  2728 ;; This function is called by:
  2729 ;;		_lcd_send_byte
  2730 ;;		_lcd_init
  2731 ;;		_lcd_putc
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text16
  2737  001AA2                     __ptext16:
  2738                           	opt stack 0
  2739  001AA2                     _delay_ms:
  2740                           	opt stack 27
  2741                           
  2742                           ;project.c: 190: for (unsigned int i = 0; i < n; i++) {
  2743                           
  2744                           ;incstack = 0
  2745  001AA2  0E00               	movlw	0
  2746  001AA4  6E04               	movwf	delay_ms@i+1,c
  2747  001AA6  0E00               	movlw	0
  2748  001AA8  6E03               	movwf	delay_ms@i,c
  2749  001AAA  D008               	goto	l216
  2750  001AAC                     
  2751                           ;project.c: 191: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
  2752  001AAC  0EC8               	movlw	200
  2753  001AAE                     u1327:
  2754  001AAE  0004               	clrwdt	
  2755  001AB0  0004               	clrwdt	
  2756  001AB2  2EE8               	decfsz	wreg,f,c
  2757  001AB4  D7FC               	bra	u1327
  2758  001AB6  0004               	clrwdt		;# 
  2759  001AB8  4A03               	infsnz	delay_ms@i,f,c
  2760  001ABA  2A04               	incf	delay_ms@i+1,f,c
  2761  001ABC                     l216:
  2762  001ABC  5001               	movf	delay_ms@n,w,c
  2763  001ABE  5C03               	subwf	delay_ms@i,w,c
  2764  001AC0  5002               	movf	delay_ms@n+1,w,c
  2765  001AC2  5804               	subwfb	delay_ms@i+1,w,c
  2766  001AC4  B0D8               	btfsc	status,0,c
  2767  001AC6  0012               	return	
  2768  001AC8  D7F1               	goto	l217
  2769  001ACA                     __end_of_delay_ms:
  2770                           	opt stack 0
  2771                           tblptru	equ	0xFF8
  2772                           tblptrh	equ	0xFF7
  2773                           tblptrl	equ	0xFF6
  2774                           tablat	equ	0xFF5
  2775                           prodh	equ	0xFF4
  2776                           prodl	equ	0xFF3
  2777                           intcon	equ	0xFF2
  2778                           indf0	equ	0xFEF
  2779                           postinc0	equ	0xFEE
  2780                           fsr0h	equ	0xFEA
  2781                           fsr0l	equ	0xFE9
  2782                           wreg	equ	0xFE8
  2783                           postdec1	equ	0xFE5
  2784                           fsr1l	equ	0xFE1
  2785                           indf2	equ	0xFDF
  2786                           postinc2	equ	0xFDE
  2787                           postdec2	equ	0xFDD
  2788                           fsr2h	equ	0xFDA
  2789                           fsr2l	equ	0xFD9
  2790                           status	equ	0xFD8
  2791                           
  2792 ;; *************** function _is_byte_available *****************
  2793 ;; Defined at:
  2794 ;;		line 21 in file "my_ser.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      unsigned char 
  2801 ;; Registers used:
  2802 ;;		wreg
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text17
  2822  001B10                     __ptext17:
  2823                           	opt stack 0
  2824  001B10                     _is_byte_available:
  2825                           	opt stack 30
  2826                           
  2827                           ;my_ser.c: 23: if (RCSTAbits.FERR || RCSTAbits.OERR)
  2828                           
  2829                           ;incstack = 0
  2830  001B10  B4AB               	btfsc	4011,2,c	;volatile
  2831  001B12  D002               	goto	u940
  2832  001B14  A2AB               	btfss	4011,1,c	;volatile
  2833  001B16  D002               	goto	l107
  2834  001B18                     u940:
  2835                           
  2836                           ;my_ser.c: 24: {
  2837                           ;my_ser.c: 25: RCSTAbits.CREN = 0;
  2838  001B18  98AB               	bcf	4011,4,c	;volatile
  2839                           
  2840                           ;my_ser.c: 26: RCSTAbits.CREN = 1;
  2841  001B1A  88AB               	bsf	4011,4,c	;volatile
  2842  001B1C                     l107:
  2843                           
  2844                           ;my_ser.c: 27: }
  2845                           ;my_ser.c: 29: if (PIR1bits.RCIF) return 1;
  2846  001B1C  AA9E               	btfss	3998,5,c	;volatile
  2847  001B1E  D002               	goto	l110
  2848  001B20  0E01               	movlw	1
  2849  001B22  0012               	return	
  2850  001B24                     l110:
  2851                           
  2852                           ;my_ser.c: 30: else return 0;
  2853  001B24  0E00               	movlw	0
  2854  001B26  0012               	return	
  2855  001B28                     __end_of_is_byte_available:
  2856                           	opt stack 0
  2857                           tblptru	equ	0xFF8
  2858                           tblptrh	equ	0xFF7
  2859                           tblptrl	equ	0xFF6
  2860                           tablat	equ	0xFF5
  2861                           prodh	equ	0xFF4
  2862                           prodl	equ	0xFF3
  2863                           intcon	equ	0xFF2
  2864                           indf0	equ	0xFEF
  2865                           postinc0	equ	0xFEE
  2866                           fsr0h	equ	0xFEA
  2867                           fsr0l	equ	0xFE9
  2868                           wreg	equ	0xFE8
  2869                           postdec1	equ	0xFE5
  2870                           fsr1l	equ	0xFE1
  2871                           indf2	equ	0xFDF
  2872                           postinc2	equ	0xFDE
  2873                           postdec2	equ	0xFDD
  2874                           fsr2h	equ	0xFDA
  2875                           fsr2l	equ	0xFD9
  2876                           status	equ	0xFD8
  2877                           
  2878 ;; *************** function _init_adc_no_lib *****************
  2879 ;; Defined at:
  2880 ;;		line 11 in file "my_adc.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text18
  2908  001B38                     __ptext18:
  2909                           	opt stack 0
  2910  001B38                     _init_adc_no_lib:
  2911                           	opt stack 30
  2912                           
  2913                           ;my_adc.c: 14: ADCON0 = 0;
  2914                           
  2915                           ;incstack = 0
  2916  001B38  0E00               	movlw	0
  2917  001B3A  6EC2               	movwf	4034,c	;volatile
  2918                           
  2919                           ;my_adc.c: 15: ADCON0bits.ADON = 1;
  2920  001B3C  80C2               	bsf	4034,0,c	;volatile
  2921                           
  2922                           ;my_adc.c: 18: ADCON2 = 0b10001001;
  2923  001B3E  0E89               	movlw	137
  2924  001B40  6EC0               	movwf	4032,c	;volatile
  2925  001B42  0012               	return		;funcret
  2926  001B44                     __end_of_init_adc_no_lib:
  2927                           	opt stack 0
  2928                           tblptru	equ	0xFF8
  2929                           tblptrh	equ	0xFF7
  2930                           tblptrl	equ	0xFF6
  2931                           tablat	equ	0xFF5
  2932                           prodh	equ	0xFF4
  2933                           prodl	equ	0xFF3
  2934                           intcon	equ	0xFF2
  2935                           indf0	equ	0xFEF
  2936                           postinc0	equ	0xFEE
  2937                           fsr0h	equ	0xFEA
  2938                           fsr0l	equ	0xFE9
  2939                           wreg	equ	0xFE8
  2940                           postdec1	equ	0xFE5
  2941                           fsr1l	equ	0xFE1
  2942                           indf2	equ	0xFDF
  2943                           postinc2	equ	0xFDE
  2944                           postdec2	equ	0xFDD
  2945                           fsr2h	equ	0xFDA
  2946                           fsr2l	equ	0xFD9
  2947                           status	equ	0xFD8
  2948                           
  2949 ;; *************** function _initPorts *****************
  2950 ;; Defined at:
  2951 ;;		line 169 in file "project.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;Total ram usage:        0 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_main
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text19
  2979  001A78                     __ptext19:
  2980                           	opt stack 0
  2981  001A78                     _initPorts:
  2982                           	opt stack 30
  2983                           
  2984                           ;project.c: 170: ADCON1 = 0x0D;
  2985                           
  2986                           ;incstack = 0
  2987  001A78  0E0D               	movlw	13
  2988  001A7A  6EC1               	movwf	4033,c	;volatile
  2989                           
  2990                           ;project.c: 171: LATA = LATB = LATC = LATD = LATE = 0;
  2991  001A7C  0E00               	movlw	0
  2992  001A7E  6E8D               	movwf	3981,c	;volatile
  2993  001A80  CF8D FF8C          	movff	3981,3980	;volatile
  2994  001A84  CF8C FF8B          	movff	3980,3979	;volatile
  2995  001A88  CF8B FF8A          	movff	3979,3978	;volatile
  2996  001A8C  CF8A FF89          	movff	3978,3977	;volatile
  2997                           
  2998                           ;project.c: 172: TRISA = 0xFF;
  2999  001A90  6892               	setf	3986,c	;volatile
  3000                           
  3001                           ;project.c: 173: TRISB = 0xFF;
  3002  001A92  6893               	setf	3987,c	;volatile
  3003                           
  3004                           ;project.c: 174: TRISD = TRISE = 0;
  3005  001A94  0E00               	movlw	0
  3006  001A96  6E96               	movwf	3990,c	;volatile
  3007  001A98  CF96 FF95          	movff	3990,3989	;volatile
  3008                           
  3009                           ;project.c: 175: TRISC = 0b10000000;
  3010  001A9C  0E80               	movlw	128
  3011  001A9E  6E94               	movwf	3988,c	;volatile
  3012  001AA0  0012               	return		;funcret
  3013  001AA2                     __end_of_initPorts:
  3014                           	opt stack 0
  3015                           tblptru	equ	0xFF8
  3016                           tblptrh	equ	0xFF7
  3017                           tblptrl	equ	0xFF6
  3018                           tablat	equ	0xFF5
  3019                           prodh	equ	0xFF4
  3020                           prodl	equ	0xFF3
  3021                           intcon	equ	0xFF2
  3022                           indf0	equ	0xFEF
  3023                           postinc0	equ	0xFEE
  3024                           fsr0h	equ	0xFEA
  3025                           fsr0l	equ	0xFE9
  3026                           wreg	equ	0xFE8
  3027                           postdec1	equ	0xFE5
  3028                           fsr1l	equ	0xFE1
  3029                           indf2	equ	0xFDF
  3030                           postinc2	equ	0xFDE
  3031                           postdec2	equ	0xFDD
  3032                           fsr2h	equ	0xFDA
  3033                           fsr2l	equ	0xFD9
  3034                           status	equ	0xFD8
  3035                           
  3036 ;; *************** function ___ftmul *****************
  3037 ;; Defined at:
  3038 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  f1              3   27[COMRAM] float 
  3041 ;;  f2              3   30[COMRAM] float 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  3044 ;;  sign            1   41[COMRAM] unsigned char 
  3045 ;;  cntr            1   40[COMRAM] unsigned char 
  3046 ;;  exp             1   36[COMRAM] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  3   27[COMRAM] float 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3056 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;Total ram usage:       15 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    1
  3063 ;; This function calls:
  3064 ;;		___ftpack
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;;		_read_adc_voltage
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text20
  3072  001414                     __ptext20:
  3073                           	opt stack 0
  3074  001414                     ___ftmul:
  3075                           	opt stack 29
  3076                           
  3077                           ;incstack = 0
  3078  001414  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  3079  001418  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3080  00141A  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3081  00141C  341D               	rlcf	___ftmul@f1+1,w,c
  3082  00141E  3622               	rlcf	??___ftmul& (0+255),f,c
  3083  001420  E301               	bnc	u1121
  3084  001422  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3085  001424                     u1121:
  3086  001424  5022               	movf	??___ftmul,w,c
  3087  001426  6E25               	movwf	___ftmul@exp,c
  3088  001428  5025               	movf	___ftmul@exp,w,c
  3089  00142A  A4D8               	btfss	status,2,c
  3090  00142C  D007               	goto	l542
  3091  00142E  0E00               	movlw	0
  3092  001430  6E1C               	movwf	?___ftmul,c
  3093  001432  0E00               	movlw	0
  3094  001434  6E1D               	movwf	?___ftmul+1,c
  3095  001436  0E00               	movlw	0
  3096  001438  6E1E               	movwf	?___ftmul+2,c
  3097  00143A  0012               	return	
  3098  00143C                     l542:
  3099  00143C  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  3100  001440  6A23               	clrf	(??___ftmul+1)& (0+255),c
  3101  001442  6A24               	clrf	(??___ftmul+2)& (0+255),c
  3102  001444  3420               	rlcf	___ftmul@f2+1,w,c
  3103  001446  3622               	rlcf	??___ftmul& (0+255),f,c
  3104  001448  E301               	bnc	u1141
  3105  00144A  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  3106  00144C                     u1141:
  3107  00144C  5022               	movf	??___ftmul,w,c
  3108  00144E  6E2A               	movwf	___ftmul@sign,c
  3109  001450  502A               	movf	___ftmul@sign,w,c
  3110  001452  A4D8               	btfss	status,2,c
  3111  001454  D007               	goto	l544
  3112  001456  0E00               	movlw	0
  3113  001458  6E1C               	movwf	?___ftmul,c
  3114  00145A  0E00               	movlw	0
  3115  00145C  6E1D               	movwf	?___ftmul+1,c
  3116  00145E  0E00               	movlw	0
  3117  001460  6E1E               	movwf	?___ftmul+2,c
  3118  001462  0012               	return	
  3119  001464                     l544:
  3120  001464  502A               	movf	___ftmul@sign,w,c
  3121  001466  0F7B               	addlw	123
  3122  001468  2625               	addwf	___ftmul@exp,f,c
  3123  00146A  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  3124  00146E  5021               	movf	___ftmul@f2+2,w,c
  3125  001470  1A2A               	xorwf	___ftmul@sign,f,c
  3126  001472  0E80               	movlw	128
  3127  001474  162A               	andwf	___ftmul@sign,f,c
  3128  001476  8E1D               	bsf	___ftmul@f1+1,7,c
  3129  001478  8E20               	bsf	___ftmul@f2+1,7,c
  3130  00147A  0EFF               	movlw	255
  3131  00147C  161F               	andwf	___ftmul@f2,f,c
  3132  00147E  0EFF               	movlw	255
  3133  001480  1620               	andwf	___ftmul@f2+1,f,c
  3134  001482  0E00               	movlw	0
  3135  001484  1621               	andwf	___ftmul@f2+2,f,c
  3136  001486  0E00               	movlw	0
  3137  001488  6E26               	movwf	___ftmul@f3_as_product,c
  3138  00148A  0E00               	movlw	0
  3139  00148C  6E27               	movwf	___ftmul@f3_as_product+1,c
  3140  00148E  0E00               	movlw	0
  3141  001490  6E28               	movwf	___ftmul@f3_as_product+2,c
  3142  001492  0E07               	movlw	7
  3143  001494  6E29               	movwf	___ftmul@cntr,c
  3144  001496  A01C               	btfss	___ftmul@f1,0,c
  3145  001498  D006               	goto	l546
  3146  00149A  501F               	movf	___ftmul@f2,w,c
  3147  00149C  2626               	addwf	___ftmul@f3_as_product,f,c
  3148  00149E  5020               	movf	___ftmul@f2+1,w,c
  3149  0014A0  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3150  0014A2  5021               	movf	___ftmul@f2+2,w,c
  3151  0014A4  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3152  0014A6                     l546:
  3153  0014A6  90D8               	bcf	status,0,c
  3154  0014A8  321E               	rrcf	___ftmul@f1+2,f,c
  3155  0014AA  321D               	rrcf	___ftmul@f1+1,f,c
  3156  0014AC  321C               	rrcf	___ftmul@f1,f,c
  3157  0014AE  90D8               	bcf	status,0,c
  3158  0014B0  361F               	rlcf	___ftmul@f2,f,c
  3159  0014B2  3620               	rlcf	___ftmul@f2+1,f,c
  3160  0014B4  3621               	rlcf	___ftmul@f2+2,f,c
  3161  0014B6  2E29               	decfsz	___ftmul@cntr,f,c
  3162  0014B8  D7EE               	goto	l545
  3163  0014BA  0E09               	movlw	9
  3164  0014BC  6E29               	movwf	___ftmul@cntr,c
  3165  0014BE  A01C               	btfss	___ftmul@f1,0,c
  3166  0014C0  D006               	goto	l549
  3167  0014C2  501F               	movf	___ftmul@f2,w,c
  3168  0014C4  2626               	addwf	___ftmul@f3_as_product,f,c
  3169  0014C6  5020               	movf	___ftmul@f2+1,w,c
  3170  0014C8  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3171  0014CA  5021               	movf	___ftmul@f2+2,w,c
  3172  0014CC  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3173  0014CE                     l549:
  3174  0014CE  90D8               	bcf	status,0,c
  3175  0014D0  321E               	rrcf	___ftmul@f1+2,f,c
  3176  0014D2  321D               	rrcf	___ftmul@f1+1,f,c
  3177  0014D4  321C               	rrcf	___ftmul@f1,f,c
  3178  0014D6  90D8               	bcf	status,0,c
  3179  0014D8  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  3180  0014DA  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  3181  0014DC  3226               	rrcf	___ftmul@f3_as_product,f,c
  3182  0014DE  2E29               	decfsz	___ftmul@cntr,f,c
  3183  0014E0  D7EE               	goto	l548
  3184  0014E2  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3185  0014E6  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3186  0014EA  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3187  0014EE  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  3188  0014F2  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  3189  0014F6  ECF7  F00A         	call	___ftpack	;wreg free
  3190  0014FA  C001  F01C         	movff	?___ftpack,?___ftmul
  3191  0014FE  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  3192  001502  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  3193  001506  0012               	return	
  3194  001508                     __end_of___ftmul:
  3195                           	opt stack 0
  3196                           tblptru	equ	0xFF8
  3197                           tblptrh	equ	0xFF7
  3198                           tblptrl	equ	0xFF6
  3199                           tablat	equ	0xFF5
  3200                           prodh	equ	0xFF4
  3201                           prodl	equ	0xFF3
  3202                           intcon	equ	0xFF2
  3203                           indf0	equ	0xFEF
  3204                           postinc0	equ	0xFEE
  3205                           fsr0h	equ	0xFEA
  3206                           fsr0l	equ	0xFE9
  3207                           wreg	equ	0xFE8
  3208                           postdec1	equ	0xFE5
  3209                           fsr1l	equ	0xFE1
  3210                           indf2	equ	0xFDF
  3211                           postinc2	equ	0xFDE
  3212                           postdec2	equ	0xFDD
  3213                           fsr2h	equ	0xFDA
  3214                           fsr2l	equ	0xFD9
  3215                           status	equ	0xFD8
  3216                           
  3217 ;; *************** function ___ftge *****************
  3218 ;; Defined at:
  3219 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  ff1             3    0[COMRAM] float 
  3222 ;;  ff2             3    3[COMRAM] float 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;		None               void
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3234 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;Total ram usage:        9 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_main
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text21
  3248  00169C                     __ptext21:
  3249                           	opt stack 0
  3250  00169C                     ___ftge:
  3251                           	opt stack 30
  3252                           
  3253                           ;incstack = 0
  3254  00169C  AE03               	btfss	___ftge@ff1+2,7,c
  3255  00169E  D016               	goto	l535
  3256  0016A0  C001  F007         	movff	___ftge@ff1,??___ftge
  3257  0016A4  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3258  0016A8  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3259  0016AC  1E07               	comf	??___ftge,f,c
  3260  0016AE  1E08               	comf	??___ftge+1,f,c
  3261  0016B0  1E09               	comf	??___ftge+2,f,c
  3262  0016B2  2A07               	incf	??___ftge,f,c
  3263  0016B4  0E00               	movlw	0
  3264  0016B6  2208               	addwfc	??___ftge+1,f,c
  3265  0016B8  2209               	addwfc	??___ftge+2,f,c
  3266  0016BA  0E00               	movlw	0
  3267  0016BC  2407               	addwf	??___ftge,w,c
  3268  0016BE  6E01               	movwf	___ftge@ff1,c
  3269  0016C0  0E00               	movlw	0
  3270  0016C2  2008               	addwfc	??___ftge+1,w,c
  3271  0016C4  6E02               	movwf	___ftge@ff1+1,c
  3272  0016C6  0E80               	movlw	128
  3273  0016C8  2009               	addwfc	??___ftge+2,w,c
  3274  0016CA  6E03               	movwf	___ftge@ff1+2,c
  3275  0016CC                     l535:
  3276  0016CC  AE06               	btfss	___ftge@ff2+2,7,c
  3277  0016CE  D016               	goto	l536
  3278  0016D0  C004  F007         	movff	___ftge@ff2,??___ftge
  3279  0016D4  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3280  0016D8  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3281  0016DC  1E07               	comf	??___ftge,f,c
  3282  0016DE  1E08               	comf	??___ftge+1,f,c
  3283  0016E0  1E09               	comf	??___ftge+2,f,c
  3284  0016E2  2A07               	incf	??___ftge,f,c
  3285  0016E4  0E00               	movlw	0
  3286  0016E6  2208               	addwfc	??___ftge+1,f,c
  3287  0016E8  2209               	addwfc	??___ftge+2,f,c
  3288  0016EA  0E00               	movlw	0
  3289  0016EC  2407               	addwf	??___ftge,w,c
  3290  0016EE  6E04               	movwf	___ftge@ff2,c
  3291  0016F0  0E00               	movlw	0
  3292  0016F2  2008               	addwfc	??___ftge+1,w,c
  3293  0016F4  6E05               	movwf	___ftge@ff2+1,c
  3294  0016F6  0E80               	movlw	128
  3295  0016F8  2009               	addwfc	??___ftge+2,w,c
  3296  0016FA  6E06               	movwf	___ftge@ff2+2,c
  3297  0016FC                     l536:
  3298  0016FC  0E00               	movlw	0
  3299  0016FE  1A01               	xorwf	___ftge@ff1,f,c
  3300  001700  0E00               	movlw	0
  3301  001702  1A02               	xorwf	___ftge@ff1+1,f,c
  3302  001704  0E80               	movlw	128
  3303  001706  1A03               	xorwf	___ftge@ff1+2,f,c
  3304  001708  0E00               	movlw	0
  3305  00170A  1A04               	xorwf	___ftge@ff2,f,c
  3306  00170C  0E00               	movlw	0
  3307  00170E  1A05               	xorwf	___ftge@ff2+1,f,c
  3308  001710  0E80               	movlw	128
  3309  001712  1A06               	xorwf	___ftge@ff2+2,f,c
  3310  001714  5004               	movf	___ftge@ff2,w,c
  3311  001716  5C01               	subwf	___ftge@ff1,w,c
  3312  001718  5005               	movf	___ftge@ff2+1,w,c
  3313  00171A  5802               	subwfb	___ftge@ff1+1,w,c
  3314  00171C  5006               	movf	___ftge@ff2+2,w,c
  3315  00171E  5803               	subwfb	___ftge@ff1+2,w,c
  3316  001720  B0D8               	btfsc	status,0,c
  3317  001722  D002               	goto	l1444
  3318  001724  90D8               	bcf	status,0,c
  3319  001726  0012               	return	
  3320  001728                     l1444:
  3321  001728  80D8               	bsf	status,0,c
  3322  00172A  0012               	return	
  3323  00172C                     __end_of___ftge:
  3324                           	opt stack 0
  3325                           tblptru	equ	0xFF8
  3326                           tblptrh	equ	0xFF7
  3327                           tblptrl	equ	0xFF6
  3328                           tablat	equ	0xFF5
  3329                           prodh	equ	0xFF4
  3330                           prodl	equ	0xFF3
  3331                           intcon	equ	0xFF2
  3332                           indf0	equ	0xFEF
  3333                           postinc0	equ	0xFEE
  3334                           fsr0h	equ	0xFEA
  3335                           fsr0l	equ	0xFE9
  3336                           wreg	equ	0xFE8
  3337                           postdec1	equ	0xFE5
  3338                           fsr1l	equ	0xFE1
  3339                           indf2	equ	0xFDF
  3340                           postinc2	equ	0xFDE
  3341                           postdec2	equ	0xFDD
  3342                           fsr2h	equ	0xFDA
  3343                           fsr2l	equ	0xFD9
  3344                           status	equ	0xFD8
  3345                           
  3346 ;; *************** function ___ftdiv *****************
  3347 ;; Defined at:
  3348 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  f1              3   12[COMRAM] float 
  3351 ;;  f2              3   15[COMRAM] float 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  f3              3   22[COMRAM] float 
  3354 ;;  sign            1   26[COMRAM] unsigned char 
  3355 ;;  exp             1   25[COMRAM] unsigned char 
  3356 ;;  cntr            1   21[COMRAM] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  3   12[COMRAM] float 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3366 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;Total ram usage:       15 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    1
  3373 ;; This function calls:
  3374 ;;		___ftpack
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;;		_read_adc_voltage
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text22
  3382  001508                     __ptext22:
  3383                           	opt stack 0
  3384  001508                     ___ftdiv:
  3385                           	opt stack 29
  3386                           
  3387                           ;incstack = 0
  3388  001508  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  3389  00150C  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  3390  00150E  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  3391  001510  340E               	rlcf	___ftdiv@f1+1,w,c
  3392  001512  3613               	rlcf	??___ftdiv& (0+255),f,c
  3393  001514  E301               	bnc	u1071
  3394  001516  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  3395  001518                     u1071:
  3396  001518  5013               	movf	??___ftdiv,w,c
  3397  00151A  6E1A               	movwf	___ftdiv@exp,c
  3398  00151C  501A               	movf	___ftdiv@exp,w,c
  3399  00151E  A4D8               	btfss	status,2,c
  3400  001520  D007               	goto	l527
  3401  001522  0E00               	movlw	0
  3402  001524  6E0D               	movwf	?___ftdiv,c
  3403  001526  0E00               	movlw	0
  3404  001528  6E0E               	movwf	?___ftdiv+1,c
  3405  00152A  0E00               	movlw	0
  3406  00152C  6E0F               	movwf	?___ftdiv+2,c
  3407  00152E  0012               	return	
  3408  001530                     l527:
  3409  001530  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  3410  001534  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  3411  001536  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  3412  001538  3411               	rlcf	___ftdiv@f2+1,w,c
  3413  00153A  3613               	rlcf	??___ftdiv& (0+255),f,c
  3414  00153C  E301               	bnc	u1091
  3415  00153E  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  3416  001540                     u1091:
  3417  001540  5013               	movf	??___ftdiv,w,c
  3418  001542  6E1B               	movwf	___ftdiv@sign,c
  3419  001544  501B               	movf	___ftdiv@sign,w,c
  3420  001546  A4D8               	btfss	status,2,c
  3421  001548  D007               	goto	l529
  3422  00154A  0E00               	movlw	0
  3423  00154C  6E0D               	movwf	?___ftdiv,c
  3424  00154E  0E00               	movlw	0
  3425  001550  6E0E               	movwf	?___ftdiv+1,c
  3426  001552  0E00               	movlw	0
  3427  001554  6E0F               	movwf	?___ftdiv+2,c
  3428  001556  0012               	return	
  3429  001558                     l529:
  3430  001558  0E00               	movlw	0
  3431  00155A  6E17               	movwf	___ftdiv@f3,c
  3432  00155C  0E00               	movlw	0
  3433  00155E  6E18               	movwf	___ftdiv@f3+1,c
  3434  001560  0E00               	movlw	0
  3435  001562  6E19               	movwf	___ftdiv@f3+2,c
  3436  001564  501B               	movf	___ftdiv@sign,w,c
  3437  001566  0F89               	addlw	137
  3438  001568  5E1A               	subwf	___ftdiv@exp,f,c
  3439  00156A  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  3440  00156E  5012               	movf	___ftdiv@f2+2,w,c
  3441  001570  1A1B               	xorwf	___ftdiv@sign,f,c
  3442  001572  0E80               	movlw	128
  3443  001574  161B               	andwf	___ftdiv@sign,f,c
  3444  001576  8E0E               	bsf	___ftdiv@f1+1,7,c
  3445  001578  0EFF               	movlw	255
  3446  00157A  160D               	andwf	___ftdiv@f1,f,c
  3447  00157C  0EFF               	movlw	255
  3448  00157E  160E               	andwf	___ftdiv@f1+1,f,c
  3449  001580  0E00               	movlw	0
  3450  001582  160F               	andwf	___ftdiv@f1+2,f,c
  3451  001584  8E11               	bsf	___ftdiv@f2+1,7,c
  3452  001586  0EFF               	movlw	255
  3453  001588  1610               	andwf	___ftdiv@f2,f,c
  3454  00158A  0EFF               	movlw	255
  3455  00158C  1611               	andwf	___ftdiv@f2+1,f,c
  3456  00158E  0E00               	movlw	0
  3457  001590  1612               	andwf	___ftdiv@f2+2,f,c
  3458  001592  0E18               	movlw	24
  3459  001594  6E16               	movwf	___ftdiv@cntr,c
  3460  001596  90D8               	bcf	status,0,c
  3461  001598  3617               	rlcf	___ftdiv@f3,f,c
  3462  00159A  3618               	rlcf	___ftdiv@f3+1,f,c
  3463  00159C  3619               	rlcf	___ftdiv@f3+2,f,c
  3464  00159E  5010               	movf	___ftdiv@f2,w,c
  3465  0015A0  5C0D               	subwf	___ftdiv@f1,w,c
  3466  0015A2  5011               	movf	___ftdiv@f2+1,w,c
  3467  0015A4  580E               	subwfb	___ftdiv@f1+1,w,c
  3468  0015A6  5012               	movf	___ftdiv@f2+2,w,c
  3469  0015A8  580F               	subwfb	___ftdiv@f1+2,w,c
  3470  0015AA  A0D8               	btfss	status,0,c
  3471  0015AC  D007               	goto	l531
  3472  0015AE  5010               	movf	___ftdiv@f2,w,c
  3473  0015B0  5E0D               	subwf	___ftdiv@f1,f,c
  3474  0015B2  5011               	movf	___ftdiv@f2+1,w,c
  3475  0015B4  5A0E               	subwfb	___ftdiv@f1+1,f,c
  3476  0015B6  5012               	movf	___ftdiv@f2+2,w,c
  3477  0015B8  5A0F               	subwfb	___ftdiv@f1+2,f,c
  3478  0015BA  8017               	bsf	___ftdiv@f3,0,c
  3479  0015BC                     l531:
  3480  0015BC  90D8               	bcf	status,0,c
  3481  0015BE  360D               	rlcf	___ftdiv@f1,f,c
  3482  0015C0  360E               	rlcf	___ftdiv@f1+1,f,c
  3483  0015C2  360F               	rlcf	___ftdiv@f1+2,f,c
  3484  0015C4  2E16               	decfsz	___ftdiv@cntr,f,c
  3485  0015C6  D7E7               	goto	l530
  3486  0015C8  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  3487  0015CC  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3488  0015D0  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3489  0015D4  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  3490  0015D8  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  3491  0015DC  ECF7  F00A         	call	___ftpack	;wreg free
  3492  0015E0  C001  F00D         	movff	?___ftpack,?___ftdiv
  3493  0015E4  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  3494  0015E8  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  3495  0015EC  0012               	return	
  3496  0015EE                     __end_of___ftdiv:
  3497                           	opt stack 0
  3498                           tblptru	equ	0xFF8
  3499                           tblptrh	equ	0xFF7
  3500                           tblptrl	equ	0xFF6
  3501                           tablat	equ	0xFF5
  3502                           prodh	equ	0xFF4
  3503                           prodl	equ	0xFF3
  3504                           intcon	equ	0xFF2
  3505                           indf0	equ	0xFEF
  3506                           postinc0	equ	0xFEE
  3507                           fsr0h	equ	0xFEA
  3508                           fsr0l	equ	0xFE9
  3509                           wreg	equ	0xFE8
  3510                           postdec1	equ	0xFE5
  3511                           fsr1l	equ	0xFE1
  3512                           indf2	equ	0xFDF
  3513                           postinc2	equ	0xFDE
  3514                           postdec2	equ	0xFDD
  3515                           fsr2h	equ	0xFDA
  3516                           fsr2l	equ	0xFD9
  3517                           status	equ	0xFD8
  3518                           
  3519 ;; *************** function ___awtoft *****************
  3520 ;; Defined at:
  3521 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  c               2    8[COMRAM] int 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  sign            1   11[COMRAM] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  3    8[COMRAM] float 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3535 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;Total ram usage:        4 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    1
  3542 ;; This function calls:
  3543 ;;		___ftpack
  3544 ;; This function is called by:
  3545 ;;		_main
  3546 ;;		_read_adc_voltage
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text23
  3551  0019E8                     __ptext23:
  3552                           	opt stack 0
  3553  0019E8                     ___awtoft:
  3554                           	opt stack 29
  3555                           
  3556                           ;incstack = 0
  3557  0019E8  0E00               	movlw	0
  3558  0019EA  6E0C               	movwf	___awtoft@sign,c
  3559  0019EC  AE0A               	btfss	___awtoft@c+1,7,c
  3560  0019EE  D006               	goto	l444
  3561  0019F0  6C09               	negf	___awtoft@c,c
  3562  0019F2  1E0A               	comf	___awtoft@c+1,f,c
  3563  0019F4  B0D8               	btfsc	status,0,c
  3564  0019F6  2A0A               	incf	___awtoft@c+1,f,c
  3565  0019F8  0E01               	movlw	1
  3566  0019FA  6E0C               	movwf	___awtoft@sign,c
  3567  0019FC                     l444:
  3568  0019FC  C009  F001         	movff	___awtoft@c,___ftpack@arg
  3569  001A00  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  3570  001A04  6A03               	clrf	___ftpack@arg+2,c
  3571  001A06  0E8E               	movlw	142
  3572  001A08  6E04               	movwf	___ftpack@exp,c
  3573  001A0A  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  3574  001A0E  ECF7  F00A         	call	___ftpack	;wreg free
  3575  001A12  C001  F009         	movff	?___ftpack,?___awtoft
  3576  001A16  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  3577  001A1A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  3578  001A1E  0012               	return	
  3579  001A20                     __end_of___awtoft:
  3580                           	opt stack 0
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           prodh	equ	0xFF4
  3586                           prodl	equ	0xFF3
  3587                           intcon	equ	0xFF2
  3588                           indf0	equ	0xFEF
  3589                           postinc0	equ	0xFEE
  3590                           fsr0h	equ	0xFEA
  3591                           fsr0l	equ	0xFE9
  3592                           wreg	equ	0xFE8
  3593                           postdec1	equ	0xFE5
  3594                           fsr1l	equ	0xFE1
  3595                           indf2	equ	0xFDF
  3596                           postinc2	equ	0xFDE
  3597                           postdec2	equ	0xFDD
  3598                           fsr2h	equ	0xFDA
  3599                           fsr2l	equ	0xFD9
  3600                           status	equ	0xFD8
  3601                           
  3602 ;; *************** function ___ftpack *****************
  3603 ;; Defined at:
  3604 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  arg             3    0[COMRAM] unsigned um
  3607 ;;  exp             1    3[COMRAM] unsigned char 
  3608 ;;  sign            1    4[COMRAM] unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  3    0[COMRAM] float 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3620 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;Total ram usage:        8 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		___awtoft
  3630 ;;		___ftdiv
  3631 ;;		___ftmul
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text24
  3636  0015EE                     __ptext24:
  3637                           	opt stack 0
  3638  0015EE                     ___ftpack:
  3639                           	opt stack 29
  3640                           
  3641                           ;incstack = 0
  3642  0015EE  5004               	movf	___ftpack@exp,w,c
  3643  0015F0  B4D8               	btfsc	status,2,c
  3644  0015F2  D005               	goto	u720
  3645  0015F4  5001               	movf	___ftpack@arg,w,c
  3646  0015F6  1002               	iorwf	___ftpack@arg+1,w,c
  3647  0015F8  1003               	iorwf	___ftpack@arg+2,w,c
  3648  0015FA  A4D8               	btfss	status,2,c
  3649  0015FC  D00C               	goto	l463
  3650  0015FE                     u720:
  3651  0015FE  0E00               	movlw	0
  3652  001600  6E01               	movwf	?___ftpack,c
  3653  001602  0E00               	movlw	0
  3654  001604  6E02               	movwf	?___ftpack+1,c
  3655  001606  0E00               	movlw	0
  3656  001608  6E03               	movwf	?___ftpack+2,c
  3657  00160A  0012               	return	
  3658  00160C  2A04               	incf	___ftpack@exp,f,c
  3659  00160E  90D8               	bcf	status,0,c
  3660  001610  3203               	rrcf	___ftpack@arg+2,f,c
  3661  001612  3202               	rrcf	___ftpack@arg+1,f,c
  3662  001614  3201               	rrcf	___ftpack@arg,f,c
  3663  001616                     l463:
  3664  001616  0E00               	movlw	0
  3665  001618  1401               	andwf	___ftpack@arg,w,c
  3666  00161A  6E06               	movwf	??___ftpack& (0+255),c
  3667  00161C  0E00               	movlw	0
  3668  00161E  1402               	andwf	___ftpack@arg+1,w,c
  3669  001620  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3670  001622  0EFE               	movlw	254
  3671  001624  1403               	andwf	___ftpack@arg+2,w,c
  3672  001626  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3673  001628  5006               	movf	??___ftpack,w,c
  3674  00162A  1007               	iorwf	??___ftpack+1,w,c
  3675  00162C  1008               	iorwf	??___ftpack+2,w,c
  3676  00162E  B4D8               	btfsc	status,2,c
  3677  001630  D00C               	goto	l466
  3678  001632  D7EC               	goto	l464
  3679  001634  2A04               	incf	___ftpack@exp,f,c
  3680  001636  0E01               	movlw	1
  3681  001638  2601               	addwf	___ftpack@arg,f,c
  3682  00163A  0E00               	movlw	0
  3683  00163C  2202               	addwfc	___ftpack@arg+1,f,c
  3684  00163E  0E00               	movlw	0
  3685  001640  2203               	addwfc	___ftpack@arg+2,f,c
  3686  001642  90D8               	bcf	status,0,c
  3687  001644  3203               	rrcf	___ftpack@arg+2,f,c
  3688  001646  3202               	rrcf	___ftpack@arg+1,f,c
  3689  001648  3201               	rrcf	___ftpack@arg,f,c
  3690  00164A                     l466:
  3691  00164A  0E00               	movlw	0
  3692  00164C  1401               	andwf	___ftpack@arg,w,c
  3693  00164E  6E06               	movwf	??___ftpack& (0+255),c
  3694  001650  0E00               	movlw	0
  3695  001652  1402               	andwf	___ftpack@arg+1,w,c
  3696  001654  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3697  001656  0EFF               	movlw	255
  3698  001658  1403               	andwf	___ftpack@arg+2,w,c
  3699  00165A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3700  00165C  5006               	movf	??___ftpack,w,c
  3701  00165E  1007               	iorwf	??___ftpack+1,w,c
  3702  001660  1008               	iorwf	??___ftpack+2,w,c
  3703  001662  B4D8               	btfsc	status,2,c
  3704  001664  D006               	goto	l469
  3705  001666  D7E6               	goto	l467
  3706  001668  0604               	decf	___ftpack@exp,f,c
  3707  00166A  90D8               	bcf	status,0,c
  3708  00166C  3601               	rlcf	___ftpack@arg,f,c
  3709  00166E  3602               	rlcf	___ftpack@arg+1,f,c
  3710  001670  3603               	rlcf	___ftpack@arg+2,f,c
  3711  001672                     l469:
  3712  001672  BE02               	btfsc	___ftpack@arg+1,7,c
  3713  001674  D003               	goto	u760
  3714  001676  0E02               	movlw	2
  3715  001678  6004               	cpfslt	___ftpack@exp,c
  3716  00167A  D7F6               	goto	l470
  3717  00167C                     u760:
  3718  00167C  A004               	btfss	___ftpack@exp,0,c
  3719  00167E  9E02               	bcf	___ftpack@arg+1,7,c
  3720  001680  90D8               	bcf	status,0,c
  3721  001682  3204               	rrcf	___ftpack@exp,f,c
  3722  001684  5004               	movf	___ftpack@exp,w,c
  3723  001686  1203               	iorwf	___ftpack@arg+2,f,c
  3724  001688  5005               	movf	___ftpack@sign,w,c
  3725  00168A  A4D8               	btfss	status,2,c
  3726  00168C  8E03               	bsf	___ftpack@arg+2,7,c
  3727  00168E  C001  F001         	movff	___ftpack@arg,?___ftpack
  3728  001692  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3729  001696  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3730  00169A  0012               	return	
  3731  00169C                     __end_of___ftpack:
  3732                           	opt stack 0
  3733                           tblptru	equ	0xFF8
  3734                           tblptrh	equ	0xFF7
  3735                           tblptrl	equ	0xFF6
  3736                           tablat	equ	0xFF5
  3737                           prodh	equ	0xFF4
  3738                           prodl	equ	0xFF3
  3739                           intcon	equ	0xFF2
  3740                           indf0	equ	0xFEF
  3741                           postinc0	equ	0xFEE
  3742                           fsr0h	equ	0xFEA
  3743                           fsr0l	equ	0xFE9
  3744                           wreg	equ	0xFE8
  3745                           postdec1	equ	0xFE5
  3746                           fsr1l	equ	0xFE1
  3747                           indf2	equ	0xFDF
  3748                           postinc2	equ	0xFDE
  3749                           postdec2	equ	0xFDD
  3750                           fsr2h	equ	0xFDA
  3751                           fsr2l	equ	0xFD9
  3752                           status	equ	0xFD8
  3753                           tblptru	equ	0xFF8
  3754                           tblptrh	equ	0xFF7
  3755                           tblptrl	equ	0xFF6
  3756                           tablat	equ	0xFF5
  3757                           prodh	equ	0xFF4
  3758                           prodl	equ	0xFF3
  3759                           intcon	equ	0xFF2
  3760                           indf0	equ	0xFEF
  3761                           postinc0	equ	0xFEE
  3762                           fsr0h	equ	0xFEA
  3763                           fsr0l	equ	0xFE9
  3764                           wreg	equ	0xFE8
  3765                           postdec1	equ	0xFE5
  3766                           fsr1l	equ	0xFE1
  3767                           indf2	equ	0xFDF
  3768                           postinc2	equ	0xFDE
  3769                           postdec2	equ	0xFDD
  3770                           fsr2h	equ	0xFDA
  3771                           fsr2l	equ	0xFD9
  3772                           status	equ	0xFD8
  3773                           
  3774                           	psect	rparam
  3775  0000                     tblptru	equ	0xFF8
  3776                           tblptrh	equ	0xFF7
  3777                           tblptrl	equ	0xFF6
  3778                           tablat	equ	0xFF5
  3779                           prodh	equ	0xFF4
  3780                           prodl	equ	0xFF3
  3781                           intcon	equ	0xFF2
  3782                           indf0	equ	0xFEF
  3783                           postinc0	equ	0xFEE
  3784                           fsr0h	equ	0xFEA
  3785                           fsr0l	equ	0xFE9
  3786                           wreg	equ	0xFE8
  3787                           postdec1	equ	0xFE5
  3788                           fsr1l	equ	0xFE1
  3789                           indf2	equ	0xFDF
  3790                           postinc2	equ	0xFDE
  3791                           postdec2	equ	0xFDD
  3792                           fsr2h	equ	0xFDA
  3793                           fsr2l	equ	0xFD9
  3794                           status	equ	0xFD8


Data Sizes:
    Strings     78
    Constant    10
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    121     125
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[3]), STR_5(CODE[16]), STR_4(CODE[15]), STR_2(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> main@buffer(COMRAM[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    send_string_no_lib@p	PTR unsigned char  size(2) Largest target is 64
		 -> STR_7(CODE[12]), main@buffer(COMRAM[64]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[15]), main@buffer(COMRAM[64]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->___ftmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _send_string_no_lib->_send_byte_no_lib
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                79    79      0   25012
                                             42 COMRAM    79    79      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           _delay_ms
                          _initPorts
                    _init_adc_no_lib
                  _is_byte_available
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
                _read_adc_raw_no_lib
                   _read_byte_no_lib
                 _send_string_no_lib
                        _setupSerial
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    1779
                                             12 COMRAM    14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          1     1      0       2
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _send_string_no_lib                                   2     0      2     219
                                              1 COMRAM     2     0      2
                   _send_byte_no_lib
 ---------------------------------------------------------------------------------
 (2) _send_byte_no_lib                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_byte_no_lib                                     1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_adc_raw_no_lib                                  7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    4426
                                             14 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    4001
                                             13 COMRAM     1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    1915
                                             10 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    2224
                                             10 COMRAM     1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1388
                                              8 COMRAM     2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      68
                                              6 COMRAM     2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (5) _delay_cycles                                         6     6      0      46
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             4     2      2     654
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _is_byte_available                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    3183
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     288
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3137
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2670
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2427
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   _delay_ms
   _initPorts
   _init_adc_no_lib
   _is_byte_available
   _lcd_gotoxy
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_puts
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
   _read_adc_raw_no_lib
   _read_byte_no_lib
   _send_string_no_lib
     _send_byte_no_lib
   _setupSerial
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     79      7D       1       98.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7D      34        0.0%
DATA                 0      0      7D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Nov 05 11:40:08 2024

                          l11 1A32                            l12 1A2C                            l20 191C  
                          l32 1982                            l25 1748                            l33 1970  
                          l41 187A                            l34 199C                            l42 183E  
                          l50 1810                            l27 1770                            l35 1974  
                          l51 17E6                            l36 1978                            l44 1856  
                          l37 197C                            l45 1862                            l46 186E  
                          l76 19C4                ?_lcd_send_byte 0009                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                   __CFG_OSC$XT 000000                   __CFG_LVP$ON 000000  
                 __CFG_WDT$ON 000000                           l110 1B24                           l200 11E2  
                         l202 11EE                           l107 1B1C                           l203 11F0  
                         l124 17BA                           l204 1200                           l125 1790  
                         l118 1B2E                           l230 12C6                           l206 129E  
                         l119 1B2C                           l231 12EE                           l207 129C  
                         l216 1ABC                           l217 1AAC                           l243 138E  
                         l244 13E6                           l236 131A                           l245 1394  
                         l237 12CC                           l229 12B6                           l238 12E0  
                         l239 1342                           l192 10D4                           l193 1102  
                         l530 1596                           l531 15BC                           l195 110E  
                         l444 19FC                           l470 1668                           l542 143C  
                         l198 11C6                           l463 1616                           l527 1530  
                         l535 16CC                           l199 123A                           l464 160C  
                         l536 16FC                           l544 1464                           l529 1558  
                         l545 1496                           l466 164A                           l546 14A6  
                         l467 1634                           l548 14BE                           l652 18AE  
                         l469 1672                           l549 14CE                           l653 18A6  
                         l662 1940                           l663 1938                           l656 18CE  
                         l657 18D8                           l666 1958                           l667 1962  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           u720 15FE  
                         u800 18B2                           u900 1832                           u830 1944  
                         u760 167C                           u907 1828                           u940 1B18  
                         u860 175E                           u685 18EC                           u686 18EE  
                         u960 17B2                           u890 1808                           u970 17DC  
                         u967 17A8                           u897 17FE                           u977 17D2  
                         _lcd 000F83                           prod 000FF3                           wreg 000FE8  
                 lcd_gotoxy@x 000C                   lcd_gotoxy@y 000B                  ___ftdiv@cntr 0016  
                ___ftdiv@sign 001B                          l1444 1728                          l1604 1740  
                        l1618 1768                          l1708 12C0                          l1736 1346  
                        STR_1 103B                          STR_2 100B                          STR_3 103B  
                        STR_4 102C                          STR_5 101C                          STR_6 1056  
                        STR_7 104A                          u1030 1372                          u1121 1424  
                        u1050 13EE                          u1060 1406                          u1141 144C  
                        u1071 1518                          u1091 1540                          u1317 1914  
                        _LATA 000F89                          _LATB 000F8A                          u1327 1AAE  
                        _LATC 000F8B                          _LATD 000F8C                          _LATE 000F8D  
                 main@counter 0074              ?_lcd_send_nibble 0001                          _main 105A  
                ___ftpack@arg 0001              _send_byte_no_lib 1B28                  ___ftpack@exp 0004  
                        fsr0h 000FEA                          indf0 000FEF                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___ftmul@cntr 0029                  ___param_bank 000000                  ___ftmul@sign 002A  
        __end_of_delay_cycles 1A4E                         ?_main 0001               __end_of___ftdiv 15EE  
             __end_of___ftmul 1508               __end_of___lwdiv 18E2               __end_of___lwmod 196C  
                       _RCREG 000FAE                         _RCSTA 000FAB                         _SPBRG 000FAF  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TRISE 000F96                         _TXREG 000FAD  
                       _TXSTA 000FAC                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
               ___awtoft@sign 000C               __end_of_dpowers 100B               _init_adc_no_lib 1B38  
               ___ftpack@sign 0005                         main@x 0078                         tablat 000FF5  
                       status 000FD8               __end_of_sprintf 1414                __CFG_PBADEN$ON 000000  
             __initialization 1A4E                  __end_of_main 12AC               ??_lcd_send_byte 000A  
                      ??_main 002B                 __activetblptr 000002                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0                        _ADRESH 000FC4  
                      _ADRESL 000FC3              __end_of___awtoft 1A20              __end_of___ftpack 169C  
                      _INTCON 000FF2                        _SPBRGH 000FB0                 main@ir_sensor 0079  
            __end_of_delay_ms 1ACA                __CFG_XINST$OFF 000000              __end_of_lcd_init 178E  
            __end_of_lcd_putc 1890              __end_of_lcd_puts 183A                        ___ftge 169C  
              __CFG_STVREN$ON 000000                     ??___ftdiv 0013                     ??___ftmul 0022  
                   ??___lwdiv 0005                     ??___lwmod 000C                 main@prevState 0076  
       ___ftmul@f3_as_product 0026       __end_of_init_adc_no_lib 1B44                  __pdataCOMRAM 007A  
                __mediumconst 0000           send_string_no_lib@p 0002                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8            _send_string_no_lib 178E  
                ?_setupSerial 0001                     ??_sprintf 0013                main@adc_value1 0070  
                  __accesstop 0080       __end_of__initialization 1A6E           ?_send_string_no_lib 0002  
                  ___ftge@ff1 0001                    ___ftge@ff2 0004             ?_read_byte_no_lib 0001  
               ___rparam_used 000001                    ___ftdiv@f1 000D                    ___ftdiv@f2 0010  
                  ___ftdiv@f3 0017                    ___awtoft@c 0009            ??_read_byte_no_lib 0001  
                  ___ftmul@f1 001C                    ___ftmul@f2 001F                __pcstackCOMRAM 0001  
       __size_of_delay_cycles 002E          ??_send_string_no_lib 0004      __end_of_send_byte_no_lib 1B38  
           lcd_gotoxy@address 000D   __end_of_read_adc_raw_no_lib 19E8                  _delay_cycles 1A20  
          __size_of_initPorts 002A             read_byte_no_lib@c 0001                lcd_send_byte@n 0009  
                     ?___ftge 0001              lcd_send_nibble@n 0008                     ?___awtoft 0009  
                   ?___ftpack 0001              ?_init_adc_no_lib 0001                     ?_delay_ms 0001  
                  _lcd_gotoxy 196C                     ?_lcd_init 0001                     ?_lcd_putc 0001  
                   ?_lcd_puts 000F             _is_byte_available 1B10                       __Hparam 0000  
                     __Lparam 0000      __size_of_lcd_send_nibble 0022            ?_is_byte_available 0001  
             __size_of___ftge 0090                       ___ftdiv 1508                       ___ftmul 1414  
                     ___lwdiv 1890                       ___lwmod 192A                  __psmallconst 1000  
                     __pcinit 1A4E                    ??___awtoft 000C                    ??___ftpack 0006  
                     __ramtop 1000           ??_is_byte_available 0001                       __ptext0 105A  
                     __ptext1 12AC                       __ptext2 192A                       __ptext3 1890  
                     __ptext4 1ACA                       __ptext5 178E                       __ptext6 1B28  
                     __ptext7 1B44                       __ptext8 19AE                       __ptext9 17E4  
           __end_of_initPorts 1AA2                       _dpowers 1001                    ??_delay_ms 0003  
                     _sprintf 12AC                    ??_lcd_init 000B                    ??_lcd_putc 000E  
                  ??_lcd_puts 0011          end_of_initialization 1A6E          __size_of_setupSerial 0024  
               __Lmediumconst 0000     __end_of_is_byte_available 1B28          lcd_send_byte@cm_data 000A  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE         __end_of_lcd_send_byte 192A  
            setupSerial@dummy 0001                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTDbits 000F83                   ?_lcd_gotoxy 000B               _LCD_INIT_STRING 007A  
            main@currentState 006B                   ___ftdiv@exp 001A                    main@buffer 002B  
                   _TXSTAbits 000FAC                   ___ftmul@exp 0025             send_byte_no_lib@c 0001  
              __end_of___ftge 172C                   _BAUDCONbits 000FB8                 __pidataCOMRAM 1B4C  
               delay_cycles@n 0004                 delay_cycles@x 0005             ??_lcd_send_nibble 0007  
   __size_of_read_byte_no_lib 0008             ?_send_byte_no_lib 0001           start_initialization 1A4E  
          ??_send_byte_no_lib 0001    __size_of_is_byte_available 0018                      ??___ftge 0007  
         __size_of_lcd_gotoxy 0042  read_adc_raw_no_lib@raw_value 0005              __CFG_LPT1OSC$OFF 000000  
 __size_of_send_string_no_lib 0056             __size_of___awtoft 0038             __size_of___ftpack 00AE  
           __size_of_delay_ms 0028             __size_of_lcd_init 0062                   sprintf@flag 0014  
           __size_of_lcd_putc 0056             __size_of_lcd_puts 0056                   sprintf@prec 0015  
            ___lwdiv@dividend 0001             __CFG_CCP2MX$PORTC 000000  __size_of_read_adc_raw_no_lib 003A  
                    ?___ftdiv 000D                      ?___ftmul 001C                      ?___lwdiv 0001  
                    ?___lwmod 0008                   __smallconst 1000                     _initPorts 1A78  
            ___lwdiv@quotient 0005                      ?_sprintf 000D      __size_of_init_adc_no_lib 000C  
                   delay_ms@i 0003                     delay_ms@n 0001                      _PIR1bits 000F9E  
            __CFG_WDTPS$32768 000000    read_adc_raw_no_lib@channel 0007              _read_byte_no_lib 1B44  
                  _ADCON0bits 000FC2                     lcd_init@i 000B                     lcd_putc@c 000E  
                   lcd_puts@s 000F                  ??_lcd_gotoxy 000C                    ?_initPorts 0001  
               ??_setupSerial 0001                     copy_data0 1A62               _lcd_send_nibble 1AEE  
                    __Hrparam 0000                      __Lrparam 0000            __CFG_BOREN$SBORDIS 000000  
          __end_of_lcd_gotoxy 19AE              __size_of___ftdiv 00E6              __size_of___ftmul 00F4  
            __size_of___lwdiv 0052              __size_of___lwmod 0042                      ___awtoft 19E8  
                    ___ftpack 15EE                    sprintf@val 0018                      _main$658 0072  
                    _delay_ms 1AA2               ___lwdiv@divisor 0003               ___lwdiv@counter 0007  
                    __ptext10 183A                      __ptext11 196C                      __ptext20 1414  
                    __ptext12 172C                      __ptext21 169C                      __ptext13 18E2  
                    __ptext22 1508                      __ptext14 1AEE                      __ptext23 19E8  
                    __ptext15 1A20                      __ptext24 15EE                      __ptext16 1AA2  
                    __ptext17 1B10                      __ptext18 1B38                      __ptext19 1A78  
                    _lcd_init 172C                      _lcd_putc 183A                      _lcd_puts 17E4  
            __size_of_sprintf 0168        __size_of_lcd_send_byte 0048                 ?_delay_cycles 0001  
               __size_of_main 0252     __size_of_send_byte_no_lib 0010           __end_of_setupSerial 1AEE  
           ??_init_adc_no_lib 0001                      main@temp 006D                   ??_initPorts 0001  
         _read_adc_raw_no_lib 19AE                     sprintf@ap 0016       __end_of_lcd_send_nibble 1B10  
                   sprintf@sp 000D                ??_delay_cycles 0001              ___lwmod@dividend 0008  
        ?_read_adc_raw_no_lib 0001    __end_of_send_string_no_lib 17E4                 _lcd_send_byte 18E2  
                    sprintf@c 001A                      sprintf@f 000F               ___lwmod@divisor 000A  
             ___lwmod@counter 000C                   _setupSerial 1ACA      __end_of_read_byte_no_lib 1B4C  
       ??_read_adc_raw_no_lib 0003  
